name: mm3d
version: '1.0'
author: MPD
about: "Free photogrammetry"
subcommands:
    - AllDev:
        about: "Force development of all tif/xif file"
        args:
            - unused_8BGR:
                help: "Generate 8-bits gray images, def=true (bool)"
                long: 8BGR
                takes_value: true
            - unused_16BGr:
                help: "Generate 16-bits gray images, def=true (bool)"
                long: 16BGr
                takes_value: true
            - unused_8BCoul:
                help: "Generate 8-bits coul images, def=true (bool)"
                long: 8BCoul
                takes_value: true
            - unused_XmlXiff:
                help: "Generate Xml Xif file, def=true (bool)"
                long: XmlXiff
                takes_value: true
    - Ann:
        about: "matches points of interest of two images"
    - AperiCloud:
        about: "Visualization of camera in ply file"
        args:
            - unused_ExpTxt:
                help: "Point in txt format ? (Def=false) (INT)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "Result (Def=AperiCloud.ply) (string)"
                long: Out
                takes_value: true
            - unused_Bin:
                help: "Ply in binary mode (Def=true) (INT)"
                long: Bin
                takes_value: true
            - unused_RGB:
                help: "Use RGB image to texturate points (Def=true) (INT)"
                long: RGB
                takes_value: true
            - unused_SeuilEc:
                help: "Max residual (Def=10) (REAL)"
                long: SeuilEc
                takes_value: true
            - unused_LimBsH:
                help: "Limit ratio base to height (Def=1e-2) (REAL)"
                long: LimBsH
                takes_value: true
            - unused_WithPoints:
                help: "Do we add point cloud? (Def=true)  (bool)"
                long: WithPoints
                takes_value: true
            - unused_CalPerIm:
                help: "If a calibration per image was used (Def=false) (bool)"
                long: CalPerIm
                takes_value: true
            - unused_Focs:
                help: "Interval of Focal (Pt2dr)"
                long: Focs
                takes_value: true
            - unused_WithCam:
                help: "With Camera (Def=true) (bool)"
                long: WithCam
                takes_value: true
            - unused_StepIm:
                help: "If image in camera are wanted, indicate reduction factor (REAL)"
                long: StepIm
                takes_value: true
            - unused_ColCadre:
                help: "Col of camera rect Def= 255 0 0 (Red), R<0  if none (Pt3di)"
                long: ColCadre
                takes_value: true
            - unused_ColRay:
                help: "Col of camera rect Def=  0 255 0 (Green), R<0 if none (Pt3di)"
                long: ColRay
                takes_value: true
            - unused_SH:
                help: "Set of Hom, Def=||, give MasqFiltered for result of HomolFilterMasq (string)"
                long: SH
                takes_value: true
            - unused_KeyName:
                help: "Key to compute printed string (Def contain only digit, NONE if unused) (string)"
                long: KeyName
                takes_value: true
            - unused_ProfCam:
                help: "Depth of pyramid representing camera (Def=0.3) (REAL)"
                long: ProfCam
                takes_value: true
            - unused_NameBundle:
                help: "Name of input GCP to add bundle intersection schema (string)"
                long: NameBundle
                takes_value: true
            - unused_RabDrBundle:
                help: "Lenght to add in budle drawing (Def=0.0) (REAL)"
                long: RabDrBundle
                takes_value: true
            - unused_GCPCtrl:
                help: "[GCPTerr.xml,GCPIm.xml,Scale]-> true 3D coordinates+image observations+residual vector scaling factor (vector<std::string>)"
                long: GCPCtrl
                takes_value: true
    - Apero:
        about: "Compute external and internal orientations"
    - Apero2Meshlab:
        about: "Convert Orientation from Apero-Micmac workflow to a meshlab-compatible format"
        args:
            - unused_UnDist:
                help: "Undistort images using Drunk (bool)"
                long: UnDist
                takes_value: true
    - Apero2NVM:
        about: "Matthieu"
        args:
            - unused_Nom:
                help: "NVM file name (string)"
                long: Nom
                takes_value: true
            - unused_Out:
                help: "Output folder (end with /) (string)"
                long: Out
                takes_value: true
            - unused_ExpTxt:
                help: "Point in txt format ? (Def=false) (INT)"
                long: ExpTxt
                takes_value: true
            - unused_ExpApeCloud:
                help: "Exporte Ply? (Def=false) (bool)"
                long: ExpApeCloud
                takes_value: true
            - unused_ExpTiePt:
                help: "Export list of Tie Points uncorrected of the distortion ?(Def=false) (bool)"
                long: ExpTiePt
                takes_value: true
            - unused_KpImCen:
                help: "Dont add a little rotation for pass from Image Centre to PP ?(To be right fix LibPP=0 in tapas before)(Def=false) (bool)"
                long: KpImCen
                takes_value: true
    - Apero2PMVS:
        about: "Convert Orientation from Apero-Micmac workflow to PMVS format"
    - AperoChImSecMM:
        about: "Select secondary images for MicMac"
        args:
            - unused_ExpTxt:
                help: "Use tie points in text format (def = false, use dat format) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "Output destination (Def= same as Orientation-parameter) (string)"
                long: Out
                takes_value: true
            - unused_CalPerIm:
                help: "If a calibration per image was used (Def=False) (bool)"
                long: CalPerIm
                takes_value: true
            - unused_PatExp:
                help: "Pattern to limit export (Def=.* , i.e. all are exported) (string)"
                long: PatExp
                takes_value: true
            - unused_Focs:
                help: "Interval of Focal (Pt2dr)"
                long: Focs
                takes_value: true
            - unused_PenPerIm:
                help: "Penality per image, to limite size, def = 0.3 (REAL)"
                long: PenPerIm
                takes_value: true
            - unused_TetaOpt:
                help: "Optimal angle of stereoscopy, in radian, def=0.17 (+or- 10 degree) (REAL)"
                long: TetaOpt
                takes_value: true
            - unused_Masq3D:
                help: "Masq3D for tie points selection (string)"
                long: Masq3D
                takes_value: true
            - unused_VecDep:
                help: "Fixed Vec of deplacement (adapted to video like acquisition)  (vector<int>)"
                long: VecDep
                takes_value: true
            - unused_OnlyVecDep:
                help: "Only vec dep (internal purpose)  (bool)"
                long: OnlyVecDep
                takes_value: true
            - unused_ExpImSec:
                help: "Export Im Sec (Def= true)  (bool)"
                long: ExpImSec
                takes_value: true
    - Arsenic:
        about: "IN DEV : Radiometric equalization from tie points"
        args:
            - unused_Out:
                help: "Output folder (end with /) and/or prefix (end with another char) (string)"
                long: Out
                takes_value: true
            - unused_InVig:
                help: "Input vignette folder (for example : Vignette/ ) (string)"
                long: InVig
                takes_value: true
            - unused_ResolModel:
                help: "Resol of input model (Def=16) (INT)"
                long: ResolModel
                takes_value: true
            - unused_TPA:
                help: "Tie Point Accuracy (Higher is better, lower gives more points Def=16) (REAL)"
                long: TPA
                takes_value: true
            - unused_NbIte:
                help: "Number of iteration of the process (default=5) (INT)"
                long: NbIte
                takes_value: true
            - unused_ThreshDisp:
                help: "Disparity threshold between the tie points (Def=1.4 for 40%) (REAL)"
                long: ThreshDisp
                takes_value: true
    - Aspro:
        about: "Init External orientation of calibrated camera from GCP"
    - BAR:
        about: "Bascule robutse"
        args:
            - unused_NbTir:
                help: "Nombre de tirage du Ransac (INT)"
                long: NbTir
                takes_value: true
    - Bascule:
        about: "Generate orientations coherent with some physical information on the scene"
        args:
            - unused_ImPl:
                help: "  * [Name=ImPl] vector<std::string (vector<std::string>)"
                long: ImPl
                takes_value: true
            - unused_ExpTxt:
                help: "  * [Name=ExpTxt] IN (INT)"
                long: ExpTxt
                takes_value: true
            - unused_PostPlan:
                help: "  * [Name=PostPlan] strin (string)"
                long: PostPlan
                takes_value: true
            - unused_AllPl:
                help: "  * [Name=AllPl] boo (bool)"
                long: AllPl
                takes_value: true
            - unused_UserKeyPlan:
                help: "  * [Name=UserKeyPlan] boo (bool)"
                long: UserKeyPlan
                takes_value: true
            - unused_P1Rep:
                help: "P1Rep (Pt2dr)"
                long: P1Rep
                takes_value: true
            - unused_P2Rep:
                help: "P2Rep (Pt2dr)"
                long: P2Rep
                takes_value: true
            - unused_AxeRep:
                help: "  * [Name=AxeRep] Pt2d (Pt2dr)"
                long: AxeRep
                takes_value: true
            - unused_ImRep:
                help: "  * [Name=ImRep] strin (string)"
                long: ImRep
                takes_value: true
            - unused_Teta:
                help: "Angle (degree) (REAL)"
                long: Teta
                takes_value: true
            - unused_MesureIm:
                help: "Image measure file (string)"
                long: MesureIm
                takes_value: true
            - unused_OrthoCyl:
                help: "Generate a local repair of orthocyl mode (bool)"
                long: OrthoCyl
                takes_value: true
            - unused_DistFS:
                help: "Distance between to fix scale, if not given no scaling (REAL)"
                long: DistFS
                takes_value: true
            - unused_Norm:
                help: "Target normal for the plane (Pt3dr)"
                long: Norm
                takes_value: true
            - unused_SNorm:
                help: "|Symbolic Normal| (must be X, Y or Z) (Pt3dr)"
                long: SNorm
                takes_value: true
            - unused_LimBsH:
                help: "Limit ratio base to high (Def=1e-2) (REAL)"
                long: LimBsH
                takes_value: true
    - BatchFDC:
        about: "Tool for batching a set of commands"
        args:
            - unused_File:
                help: "  * [Name=File] strin (string)"
                long: File
                takes_value: true
            - unused_Exe:
                help: "  * [Name=Exe] IN (INT)"
                long: Exe
                takes_value: true
    - Blinis:
        about: "Block Initialisation"
    - C3DC:
        about: "Automatic Matching from Culture 3D Cloud project"
        args:
            - unused_Masq3D:
                help: "3D masq for point selection (string)"
                long: Masq3D
                takes_value: true
            - unused_Out:
                help: "final result (Def=C3DC.ply) (string)"
                long: Out
                takes_value: true
            - unused_SzNorm:
                help: "Sz of param for normal evaluation (<=0 if none, Def=2 means 5x5)  (INT)"
                long: SzNorm
                takes_value: true
            - unused_PlyCoul:
                help: "Colour in ply ? (Def = true) (bool)"
                long: PlyCoul
                takes_value: true
            - unused_Tuning:
                help: "Will disappear one day ... (bool)"
                long: Tuning
                takes_value: true
            - unused_Purge:
                help: "Purge result, (Def=true) (bool)"
                long: Purge
                takes_value: true
            - unused_DownScale:
                help: "DownScale of Final result, Def depends on mode (REAL)"
                long: DownScale
                takes_value: true
            - unused_ZoomF:
                help: "Zoom final, Def depends on mode (INT)"
                long: ZoomF
                takes_value: true
            - unused_UseGpu:
                help: "Use cuda (Def=false) (bool)"
                long: UseGpu
                takes_value: true
            - unused_DefCor:
                help: "Def correlation, context depend (REAL)"
                long: DefCor
                takes_value: true
            - unused_ZReg:
                help: "Regularisation, context depend (REAL)"
                long: ZReg
                takes_value: true
            - unused_ExpTxt:
                help: "Use txt tie points for determining image pairs (bool)"
                long: ExpTxt
                takes_value: true
            - unused_FilePair:
                help: "Explicit pairs of images (as in Tapioca) (string)"
                long: FilePair
                takes_value: true
            - unused_DebugMMByP:
                help: "Debug MMByPair ... (bool)"
                long: DebugMMByP
                takes_value: true
            - unused_Bin:
                help: "Generate Binary or Ascii (Def=true, Binary) (bool)"
                long: Bin
                takes_value: true
            - unused_ExpImSec:
                help: "Export Images Secondair, def=true (bool)"
                long: ExpImSec
                takes_value: true
            - unused_OffsetPly:
                help: "Ply offset to overcome 32 bits problem (Pt3dr)"
                long: OffsetPly
                takes_value: true
    - CalibFinale:
        about: "Compute Final Radial distortion model"
    - CalibInit:
        about: "Compute Initial Radial distortion model"
    - Campari:
        about: "Interface to Apero, for compensation of heterogeneous measures"
        args:
            - unused_GCP:
                help: "[GrMes.xml,GrUncertainty,ImMes.xml,ImUnc] (vector<std::string>)"
                long: GCP
                takes_value: true
            - unused_EmGPS:
                help: "Embedded GPS [Gps-Dir,GpsUnc, ?GpsAlti?], GpsAlti if != Plani (vector<std::string>)"
                long: EmGPS
                takes_value: true
            - unused_GpsLa:
                help: "Gps Lever Arm, in combination with EmGPS (Pt3dr)"
                long: GpsLa
                takes_value: true
            - unused_SigmaTieP:
                help: "Sigma use for TieP weighting (Def=1) (REAL)"
                long: SigmaTieP
                takes_value: true
            - unused_FactElimTieP:
                help: "Fact elimination of tie point (prop to SigmaTieP, Def=5) (REAL)"
                long: FactElimTieP
                takes_value: true
            - unused_CPI1:
                help: "Calib Per Im, Firt time (bool)"
                long: CPI1
                takes_value: true
            - unused_CPI2:
                help: "Calib Per Im, After first time, reUsing Calib Per Im As input (bool)"
                long: CPI2
                takes_value: true
            - unused_FocFree:
                help: "Foc Free (Def=false) (bool)"
                long: FocFree
                takes_value: true
            - unused_PPFree:
                help: "Principal Point Free (Def=false) (bool)"
                long: PPFree
                takes_value: true
            - unused_AffineFree:
                help: "Affine Parameter (Def=false) (bool)"
                long: AffineFree
                takes_value: true
            - unused_AllFree:
                help: "Affine Parameter (Def=false) (bool)"
                long: AllFree
                takes_value: true
            - unused_DetGCP:
                help: "Detail on GCP (Def=false) (bool)"
                long: DetGCP
                takes_value: true
            - unused_Visc:
                help: "Viscosity in Levenberg-Marquardt like resolution (Def=1.0) (REAL)"
                long: Visc
                takes_value: true
            - unused_ExpTxt:
                help: "Export in text format (Def=false) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ImMinMax:
                help: "Im max and min to avoid tricky pat (vector<std::string>)"
                long: ImMinMax
                takes_value: true
            - unused_DegAdd:
                help: "When specified, degree of additionnal parameter (INT)"
                long: DegAdd
                takes_value: true
            - unused_DegFree:
                help: "When specified degree of freedom of parameters generiqs (INT)"
                long: DegFree
                takes_value: true
            - unused_DRMax:
                help: "When specified degree of freedom of radial parameters (INT)"
                long: DRMax
                takes_value: true
            - unused_PoseFigee:
                help: "Does the external orientation of the cameras are frozen or free (Def=false, i.e. camera poses are free) (bool)"
                long: PoseFigee
                takes_value: true
            - unused_FrozenPoses:
                help: "List of frozen poses (pattern) (string)"
                long: FrozenPoses
                takes_value: true
            - unused_AcceptGB:
                help: "Accepte new Generik Bundle image, Def=true, set false for perfect backward compatibility (bool)"
                long: AcceptGB
                takes_value: true
            - unused_MulRTA:
                help: "Rolling Test Appuis , multiplier  (vector<double>)"
                long: MulRTA
                takes_value: true
            - unused_NameRTA:
                help: "Name for save results of Rolling Test Appuis , Def=SauvRTA.xml (string)"
                long: NameRTA
                takes_value: true
            - unused_GCPRTA:
                help: "Internal Use, GCP for RTA  (vector<std::string>)"
                long: GCPRTA
                takes_value: true
            - unused_SH:
                help: "Set of Hom, Def=||, give MasqFiltered for result of HomolFilterMasq, set NONE if unused (string)"
                long: SH
                takes_value: true
            - unused_NbIterEnd:
                help: "Number of iteration at end, Def = 4 (INT)"
                long: NbIterEnd
                takes_value: true
            - unused_BlocGlob:
                help: "Param for Glob bloc compute [File,SigmaCenter,SigmaRot,?MulFinal,?Export] (vector<std::string>)"
                long: BlocGlob
                takes_value: true
            - unused_DistBlocGlob:
                help: "Param for Dist Glob bloc compute [File,SigmaDist,?MulFinal,?Export] (vector<std::string>)"
                long: DistBlocGlob
                takes_value: true
            - unused_OptBlocG:
                help: "[SigmaTr,SigmaRot] (vector<std::string>)"
                long: OptBlocG
                takes_value: true
            - unused_BlocTimeRel:
                help: "Param for Time Reliative bloc compute [File,SigmaCenter,SigmaRot,?MulFinal,?Export] (vector<std::string>)"
                long: BlocTimeRel
                takes_value: true
            - unused_NbLiais:
                help: "Param for relative weighting for tie points (INT)"
                long: NbLiais
                takes_value: true
            - unused_PdsGBRot:
                help: "Weighting of the global rotation constraint (Generic bundle Def=0.002) (REAL)"
                long: PdsGBRot
                takes_value: true
            - unused_PdsGBId:
                help: "Weighting of the global deformation constraint (Generic bundle Def=0.0) (REAL)"
                long: PdsGBId
                takes_value: true
            - unused_PdsGBIter:
                help: "Weighting of the change of the global rotation constraint between iterations (Generic bundle Def=1e-6) (REAL)"
                long: PdsGBIter
                takes_value: true
            - unused_ExportSensib:
                help: "Export sensiblity (accuracy) estimator : correlation , varaiance, inverse matrix variance ...  (bool)"
                long: ExportSensib
                takes_value: true
            - unused_UseGaussJ:
                help: "Use GaussJ instead of Cholesky (Def depend of others)  (bool)"
                long: UseGaussJ
                takes_value: true
            - unused_NormEq:
                help: "Flag for Norm Eq, 1->Sc, 2-Tr, Def=3 (All), tuning purpose  (INT)"
                long: NormEq
                takes_value: true
            - unused_ContrCalCamCons:
                help: "Constraint on calibration for conseq camera [Key,Simga]  (vector<std::string>)"
                long: ContrCalCamCons
                takes_value: true
    - CASA:
        about: "Analytic Surface Estimation"
        args:
            - unused_Out:
                help: "Name of result (Def=TheCyl.xml) (string)"
                long: Out
                takes_value: true
            - unused_N2:
                help: "Name of optional second cloud (string)"
                long: N2
                takes_value: true
            - unused_N3:
                help: "Name of optional third cloud (string)"
                long: N3
                takes_value: true
            - unused_N4:
                help: "Name of optional fourth cloud (string)"
                long: N4
                takes_value: true
            - unused_PtsOri:
                help: "[Pts2D.xml,Ori], points and Orientation (used for sizing) to specify surface (vector<std::string>)"
                long: PtsOri
                takes_value: true
    - CatImSaisie:
        about: "Do some stuff"
    - CenterBascule:
        about: "Relative to absolute using embedded GPS"
        args:
            - unused_L1:
                help: "L1 minimization vs L2; (Def=false) (bool)"
                long: L1
                takes_value: true
            - unused_CalcV:
                help: "Use speed to estimate time delay (Def=false) (bool)"
                long: CalcV
                takes_value: true
    - ChantierClip:
        about: "Clip Chantier"
        args:
            - unused_PrefCliped:
                help: "def= Cliped (string)"
                long: PrefCliped
                takes_value: true
            - unused_OriOut:
                help: "Out Orientation, def = input (string)"
                long: OriOut
                takes_value: true
            - unused_MinSz:
                help: "Min sz to select cliped def = 500 (REAL)"
                long: MinSz
                takes_value: true
    - CheckDependencies:
        about: "check dependencies to third-party tools"
    - ChgSysCo:
        about: "Change coordinate system of orientation"
        args:
            - unused_FR:
                help: "Force orientation matrix to be pure rotation (Def = true) (bool)"
                long: FR
                takes_value: true
    - CleanPatByOri:
        about: "Clean a pattern of image by Ori-XXX folder"
        args:
            - unused_Show:
                help: "Display Pattern to use in cmd line ; Def=false (bool)"
                long: Show
                takes_value: true
            - unused_Out:
                help: "Output Folder Name for Images NOT will be used (string)"
                long: Out
                takes_value: true
    - ClipIm:
        about: "Clip Chantier"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
    - CmpCalib:
        about: "Compare two calibrations"
        args:
            - unused_Teta01:
                help: "  * [Name=Teta01] REA (REAL)"
                long: Teta01
                takes_value: true
            - unused_Teta02:
                help: "  * [Name=Teta02] REA (REAL)"
                long: Teta02
                takes_value: true
            - unused_Teta12:
                help: "  * [Name=Teta12] REA (REAL)"
                long: Teta12
                takes_value: true
            - unused_L1:
                help: "  * [Name=L1] IN (INT)"
                long: L1
                takes_value: true
            - unused_SzW:
                help: "  * [Name=SzW] IN (INT)"
                long: SzW
                takes_value: true
            - unused_DynV:
                help: "  * [Name=DynV] REA (REAL)"
                long: DynV
                takes_value: true
            - unused_Out:
                help: "Result (Def=Name1_ecarts.txt) (string)"
                long: Out
                takes_value: true
            - unused_DispW:
                help: "Display window (bool)"
                long: DispW
                takes_value: true
            - unused_XmlG:
                help: "Generate Xml (string)"
                long: XmlG
                takes_value: true
    - CmpIm:
        about: "Basic tool for images comparison"
        args:
            - unused_FileDiff:
                help: "Difference image output file (string)"
                long: FileDiff
                takes_value: true
            - unused_Dyn:
                help: "Dynamic of difference (REAL)"
                long: Dyn
                takes_value: true
            - unused_Brd:
                help: "Border to eliminate (Pt2di)"
                long: Brd
                takes_value: true
            - unused_OkSzDif:
                help: "Process files with different sizes (bool)"
                long: OkSzDif
                takes_value: true
            - unused_Mul2:
                help: "Multiplier of file2 (Def 1.0) (REAL)"
                long: Mul2
                takes_value: true
            - unused_UseFOM:
                help: "Consider file as DTSM and use XML FileOriMnt (bool)"
                long: UseFOM
                takes_value: true
            - unused_ColDif:
                help: "Color file of diff using Red/Blue for sign (REAL)"
                long: ColDif
                takes_value: true
            - unused_16Bit:
                help: "Output file in 16bits (bool)"
                long: 16Bit
                takes_value: true
            - unused_XmlG:
                help: "Generate Xml (string)"
                long: XmlG
                takes_value: true
            - unused_Hist:
                help: "Generate histogram stats (bool)"
                long: Hist
                takes_value: true
    - CmpOri:
        about: "Compare two sets of orientation"
        args:
            - unused_DirOri2:
                help: "Orientation 2 (string)"
                long: DirOri2
                takes_value: true
            - unused_XmlG:
                help: "Generate Xml (string)"
                long: XmlG
                takes_value: true
    - cod:
        about: "Do some stuff"
        args:
            - unused_dc:
                help: "  * [Name=dc] IN (INT)"
                long: dc
                takes_value: true
    - CoherEpip:
        about: "Test coherence between conjugate epipolar depth-map"
        args:
            - unused_Dir:
                help: "  * [Name=Dir] strin (string)"
                long: Dir
                takes_value: true
            - unused_Box:
                help: "  * [Name=Box] Box2d (Box2di)"
                long: Box
                takes_value: true
            - unused_SzDec:
                help: "  * [Name=SzDec] IN (INT)"
                long: SzDec
                takes_value: true
            - unused_Brd:
                help: "  * [Name=Brd] IN (INT)"
                long: Brd
                takes_value: true
            - unused_SigP:
                help: "Standard error in pixel (Def=1.5) (REAL)"
                long: SigP
                takes_value: true
            - unused_RegCh:
                help: "Check regularity of DSM (avoid with vegetation) (bool)"
                long: RegCh
                takes_value: true
            - unused_FBH:
                help: "Filter on homogeneous border (to avoid sky background) (bool)"
                long: FBH
                takes_value: true
            - unused_YBox:
                help: "  * [Name=YBox] Pt2d (Pt2di)"
                long: YBox
                takes_value: true
            - unused_Regul:
                help: "Regularisation for mask (Def = 0.5) (REAL)"
                long: Regul
                takes_value: true
            - unused_RedM:
                help: "Reduce factor for mask (Def = 2.0) (REAL)"
                long: RedM
                takes_value: true
            - unused_DoMS:
                help: "Do symetric mask (Def  = false) (REAL)"
                long: DoMS
                takes_value: true
            - unused_DoM:
                help: "Do Mask, def = false (bool)"
                long: DoM
                takes_value: true
            - unused_UAM:
                help: "Use Auto Mask (def = same as DoM) (bool)"
                long: UAM
                takes_value: true
            - unused_Visu:
                help: "  * [Name=Visu] boo (bool)"
                long: Visu
                takes_value: true
            - unused_Zoom:
                help: "  * [Name=Zoom] IN (INT)"
                long: Zoom
                takes_value: true
            - unused_NumPx:
                help: "  * [Name=NumPx] IN (INT)"
                long: NumPx
                takes_value: true
            - unused_NumMasq:
                help: "  * [Name=NumMasq] IN (INT)"
                long: NumMasq
                takes_value: true
            - unused_Prefix:
                help: "Prefix to result name, Def= AR (string)"
                long: Prefix
                takes_value: true
            - unused_Step:
                help: "  * [Name=Step] REA (REAL)"
                long: Step
                takes_value: true
            - unused_ByE:
                help: "  * [Name=ByE] boo (bool)"
                long: ByE
                takes_value: true
            - unused_ByP:
                help: "  * [Name=ByP] boo (bool)"
                long: ByP
                takes_value: true
            - unused_InParal:
                help: "Run command in parallel, Def=true, tuning (bool)"
                long: InParal
                takes_value: true
            - unused_InternalCalledByP:
                help: "  * [Name=InternalCalledByP] boo (bool)"
                long: InternalCalledByP
                takes_value: true
            - unused_InternalPostfixP:
                help: "  * [Name=InternalPostfixP] strin (string)"
                long: InternalPostfixP
                takes_value: true
            - unused_ExpFin:
                help: "For final export (generate distortion indicator) (bool)"
                long: ExpFin
                takes_value: true
            - unused_BSHReject:
                help: "Value for low Basr to Ratio leading do rejection (Def=0.02) (REAL)"
                long: BSHReject
                takes_value: true
            - unused_FactBSHOk:
                help: "Multiplier so that BSHOk= FactBSHOk * BSHReject (Def=2) (REAL)"
                long: FactBSHOk
                takes_value: true
            - unused_Debug:
                help: "Tuning .... (bool)"
                long: Debug
                takes_value: true
            - unused_Masq3D:
                help: "3D masq to enhance filtering (string)"
                long: Masq3D
                takes_value: true
    - Compens:
        about: "Do some stuff"
    - ContrastFilter:
        about: "Some contrast filtering"
        args:
            - unused_Out:
                help: "Name of Result (string)"
                long: Out
                takes_value: true
            - unused_Gray:
                help: "Gray image , def=true (bool)"
                long: Gray
                takes_value: true
            - unused_Masq:
                help: "Masq of image (string)"
                long: Masq
                takes_value: true
    - Convert2GenBundle:
        about: "Import RPC or other to MicMac format, for adjustment, matching ..."
        args:
            - unused_ChSys:
                help: "Change coordinate file (MicMac XML convention) (string)"
                long: ChSys
                takes_value: true
            - unused_Degre:
                help: "Degre of polynomial correction (Def=2) (INT)"
                long: Degre
                takes_value: true
            - unused_Type:
                help: "Type of sensor (see eTypeImporGenBundle) (string)"
                long: Type
                takes_value: true
            - unused_PertubAng:
                help: "Type of sensor (see eTypeImporGenBundle) (REAL)"
                long: PertubAng
                takes_value: true
    - ConvertCalib:
        about: "Conversion of calibration from one model 2 the other"
        args:
            - unused_NbXY:
                help: "Number of point of the Grid (INT)"
                long: NbXY
                takes_value: true
            - unused_NbProf:
                help: "Number of depth (INT)"
                long: NbProf
                takes_value: true
            - unused_DRMax:
                help: "Max degree of radial dist (def=depend Output calibration) (INT)"
                long: DRMax
                takes_value: true
            - unused_DegGen:
                help: "Max degree of generik polynom (def=depend Output calibration) (INT)"
                long: DegGen
                takes_value: true
            - unused_PPFree:
                help: "Principal point free (Def=true) (bool)"
                long: PPFree
                takes_value: true
            - unused_CDFree:
                help: "Distorsion center free (def=true) (bool)"
                long: CDFree
                takes_value: true
            - unused_FocFree:
                help: "Focal free (def=true) (bool)"
                long: FocFree
                takes_value: true
            - unused_DecFree:
                help: "Decentrik free (def=true when appliable) (bool)"
                long: DecFree
                takes_value: true
    - ConvertIm:
        about: "Tool for convertion inside tiff-format"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_Ext:
                help: "  * [Name=Ext] strin (string)"
                long: Ext
                takes_value: true
            - unused_SzOut:
                help: "Size out (Pt2di)"
                long: SzOut
                takes_value: true
            - unused_P0:
                help: "  * [Name=P0] Pt2d (Pt2di)"
                long: P0
                takes_value: true
            - unused_Type:
                help: "TypeMNT (string)"
                long: Type
                takes_value: true
            - unused_Col:
                help: "Col (string)"
                long: Col
                takes_value: true
            - unused_ReducXY:
                help: "  * [Name=ReducXY] IN (INT)"
                long: ReducXY
                takes_value: true
            - unused_ReducX:
                help: "  * [Name=ReducX] IN (INT)"
                long: ReducX
                takes_value: true
            - unused_ReducY:
                help: "  * [Name=ReducY] IN (INT)"
                long: ReducY
                takes_value: true
            - unused_Visu:
                help: "  * [Name=Visu] IN (INT)"
                long: Visu
                takes_value: true
            - unused_SzTifTile:
                help: "  * [Name=SzTifTile] Pt2d (Pt2di)"
                long: SzTifTile
                takes_value: true
            - unused_SzTileInterne:
                help: "  * [Name=SzTileInterne] Pt2d (Pt2di)"
                long: SzTileInterne
                takes_value: true
            - unused_Dyn:
                help: "  * [Name=Dyn] REA (REAL)"
                long: Dyn
                takes_value: true
            - unused_KCh:
                help: "  * [Name=KCh] IN (INT)"
                long: KCh
                takes_value: true
            - unused_NoTile:
                help: "  * [Name=NoTile] IN (INT)"
                long: NoTile
                takes_value: true
            - unused_Permut:
                help: "Permut (vector<int>)"
                long: Permut
                takes_value: true
            - unused_F2:
                help: "  * [Name=F2] strin (string)"
                long: F2
                takes_value: true
    - ConvertPolygone:
        about: "Do some stuff"
    - CreateEpip:
        about: "Create epipolar images"
        args:
            - unused_Scale:
                help: "  * [Name=Scale] REA (REAL)"
                long: Scale
                takes_value: true
            - unused_Dir:
                help: "directory (Def=current) (string)"
                long: Dir
                takes_value: true
            - unused_Gray:
                help: "One channel gray level image (Def=true) (bool)"
                long: Gray
                takes_value: true
            - unused_16B:
                help: "Maintain 16 Bits images if avalaible (Def=true) (bool)"
                long: 16B
                takes_value: true
            - unused_InParal:
                help: "Compute in parallel (Def=true) (bool)"
                long: InParal
                takes_value: true
            - unused_DoIm:
                help: "Compute image (def=true !!) (bool)"
                long: DoIm
                takes_value: true
            - unused_NameH:
                help: "Extension to compute Hom point in epi coord (def=none) (string)"
                long: NameH
                takes_value: true
            - unused_Degre:
                help: "Degre of polynom to correct epi (def=9) (INT)"
                long: Degre
                takes_value: true
            - unused_FG:
                help: "Force generik epip even with stenope cam (bool)"
                long: FG
                takes_value: true
            - unused_Kern:
                help: "Kernel of interpol,0 Bilin, 1 Bicub, other SinC (fix size of apodisation window), Def=5 (INT)"
                long: Kern
                takes_value: true
            - unused_AttrMasq:
                help: "Atribut for masq toto-> toto_AttrMasq.tif, NONE if unused, Def=Ori (string)"
                long: AttrMasq
                takes_value: true
            - unused_PostIm:
                help: "Attribut for Im  (string)"
                long: PostIm
                takes_value: true
            - unused_ExpTxt:
                help: "Use txt tie points (Def false, e.g. use dat format) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_Dir1:
                help: "Direction of Epip one (when Ori=NONE) (Pt2dr)"
                long: Dir1
                takes_value: true
            - unused_Dir2:
                help: "Direction of Epip one (when Ori=NONE) (Pt2dr)"
                long: Dir2
                takes_value: true
            - unused_NbBloc:
                help: "Sz of Bloc (mostly tuning) (INT)"
                long: NbBloc
                takes_value: true
    - Dequant:
        about: "Tool for dequantifying an image"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_P0:
                help: "  * [Name=P0] Pt2d (Pt2di)"
                long: P0
                takes_value: true
            - unused_Sz:
                help: "  * [Name=Sz] Pt2d (Pt2di)"
                long: Sz
                takes_value: true
            - unused_SzMaxDalles:
                help: "  * [Name=SzMaxDalles] IN (INT)"
                long: SzMaxDalles
                takes_value: true
            - unused_SzRecDalles:
                help: "  * [Name=SzRecDalles] IN (INT)"
                long: SzRecDalles
                takes_value: true
            - unused_TraitSpecCuv:
                help: "  * [Name=TraitSpecCuv] boo (bool)"
                long: TraitSpecCuv
                takes_value: true
            - unused_Dyn:
                help: "  * [Name=Dyn] REA (REAL)"
                long: Dyn
                takes_value: true
            - unused_Offs:
                help: "  * [Name=Offs] REA (REAL)"
                long: Offs
                takes_value: true
    - Devlop:
        about: "Do some stuff"
        args:
            - unused_8B:
                help: "  * [Name=8B] IN (INT)"
                long: 8B
                takes_value: true
            - unused_Gray:
                help: "  * [Name=Gray] IN (INT)"
                long: Gray
                takes_value: true
            - unused_Post:
                help: "  * [Name=Post] strin (string)"
                long: Post
                takes_value: true
            - unused_ConsCol:
                help: "  * [Name=ConsCol] IN (INT)"
                long: ConsCol
                takes_value: true
            - unused_NameOut:
                help: "  * [Name=NameOut] strin (string)"
                long: NameOut
                takes_value: true
            - unused_Split:
                help: "  * [Name=Split] strin (string)"
                long: Split
                takes_value: true
    - Digeo:
        about: "In development- Will compute tie points"
    - DIV:
        about: "Videos development (require ffmpeg)"
        args:
            - unused_Rate:
                help: "Rate final Def=4 (REAL)"
                long: Rate
                takes_value: true
            - unused_ParamSzSift:
                help: "Parameter used for sift development, def=-1 (Highest) (INT)"
                long: ParamSzSift
                takes_value: true
            - unused_PatNumber:
                help: "Pat number (reduce number for test) (string)"
                long: PatNumber
                takes_value: true
            - unused_DoV2I:
                help: "Do the development of video 2 images, def true iff no image to corresp pattern (bool)"
                long: DoV2I
                takes_value: true
            - unused_NDig:
                help: "Nb digit for numbering out images (Def=5) (INT)"
                long: NDig
                takes_value: true
            - unused_Foc:
                help: "Set focale in xif, def=F35 (REAL)"
                long: Foc
                takes_value: true
            - unused_Cam:
                help: "Set Cam in xif (string)"
                long: Cam
                takes_value: true
            - unused_PercImInit:
                help: "Pecentage of images a priori sele (REAL)"
                long: PercImInit
                takes_value: true
            - unused_MinMax:
                help: "Min Max numbers (reduce number for test) (Pt2di)"
                long: MinMax
                takes_value: true
            - unused_Tuning:
                help: "as it says ...  (bool)"
                long: Tuning
                takes_value: true
            - unused_TheSzDecoup:
                help: "Sz of a priori split, |expert| level , Def=300  (INT)"
                long: TheSzDecoup
                takes_value: true
            - unused_OverLap:
                help: "Target overlap between images  (REAL)"
                long: OverLap
                takes_value: true
    - Donuts:
        about: "Cyl to Torus (Donuts like)"
        args:
            - unused_Out:
                help: "Out Put, Def = Tore (string)"
                long: Out
                takes_value: true
            - unused_Show:
                help: "Show details (bool)"
                long: Show
                takes_value: true
            - unused_Check:
                help: "Show details (bool)"
                long: Check
                takes_value: true
    - Drunk:
        about: "Images distortion removing tool"
        args:
            - unused_Out:
                help: "Output folder (end with /) and/or prefix (end with another char) (string)"
                long: Out
                takes_value: true
            - unused_Talk:
                help: "Turn on-off commentaries (bool)"
                long: Talk
                takes_value: true
    - ElDcraw:
        about: "Do some stuff"
    - ExtractAppui3D:
        about: "Extract points from a 3D appui points xml file"
    - ExtractMesure2D:
        about: "Extract points from a 2D measures xml file"
    - FFTKugelhupf:
        about: "Version of Kugelhupf using FFT, expecetd faster when it works (if ever ...)"
        args:
            - unused_TargetHalfSize:
                help: "Target half size in pixels (Def= computed from mask or 150) (Pt2di)"
                long: TargetHalfSize
                takes_value: true
            - unused_Masq:
                help: "Masq extension for ref image, Def=NONE (means unused), USE OF MASK IS STRONGLY RECOMMANDED !!!! (string)"
                long: Masq
                takes_value: true
            - unused_SearchIncertitude:
                help: "Def 3*Targ HalfSz (INT)"
                long: SearchIncertitude
                takes_value: true
            - unused_SzFFT:
                help: "Sz of initial fft research, power of recomanded, Def=256 or 128 depending other (INT)"
                long: SzFFT
                takes_value: true
            - unused_Debug:
                help: "Debugin/Tuning option (bool)"
                long: Debug
                takes_value: true
            - unused_ValSim:
                help: "Validation by similitude/affinity (Def size depent, affinity if NbPoint>=6) (bool)"
                long: ValSim
                takes_value: true
    - FieldDep3d:
        about: "To export results of matching as 3D shifting"
        args:
            - unused_SeuilG:
                help: "Threshold for gradient weighting (REAL)"
                long: SeuilG
                takes_value: true
    - FusionDepl:
        about: "Fusion carte de deplacement"
        args:
            - unused_YYYYY:
                help: "XXXXXXX (string)"
                long: YYYYY
                takes_value: true
    - GCPBascule:
        about: "Relative to absolute using GCP"
        args:
            - unused_L1:
                help: "L1 minimisation vs L2 (Def=false) (bool)"
                long: L1
                takes_value: true
            - unused_CPI:
                help: "when Calib Per Image has to be used (bool)"
                long: CPI
                takes_value: true
            - unused_ShowU:
                help: "Show unused point (def=true) (bool)"
                long: ShowU
                takes_value: true
            - unused_ShowD:
                help: "Show details (def=false) (bool)"
                long: ShowD
                takes_value: true
            - unused_PatNLD:
                help: "Pattern for Non linear deformation, with aerial like geometry (def,unused) (string)"
                long: PatNLD
                takes_value: true
            - unused_NLDegX:
                help: "Non Linear monoms for X, when PatNLD, (Def =[1,X,Y]) (vector<std::string>)"
                long: NLDegX
                takes_value: true
            - unused_NLDegY:
                help: "Non Linear monoms for Y, when PatNLD, (Def =[1,X,Y]) (vector<std::string>)"
                long: NLDegY
                takes_value: true
            - unused_NLDegZ:
                help: "Non Linear monoms for Z, when PatNLD, (Def =[1,X,X2]) (vector<std::string>)"
                long: NLDegZ
                takes_value: true
            - unused_NLFR:
                help: "Non Linear : Force True Rot (Def=true) (bool)"
                long: NLFR
                takes_value: true
            - unused_NLShow:
                help: "Non Linear : Show Details (Def=false) (bool)"
                long: NLShow
                takes_value: true
    - GCPConvert:
        about: "Convert GCP from Txt 2 XML"
        args:
            - unused_Out:
                help: "Xml Out File (string)"
                long: Out
                takes_value: true
            - unused_ChSys:
                help: "Change coordinate file (string)"
                long: ChSys
                takes_value: true
            - unused_MulCo:
                help: "Multiplier of result (for development and testing use) (REAL)"
                long: MulCo
                takes_value: true
            - unused_MulInc:
                help: "Multiplier also incertitude ? (for development and testing use) (bool)"
                long: MulInc
                takes_value: true
    - GCPCtrl:
        about: "Control accuracy with GCP"
        args:
            - unused_CPI:
                help: "when Calib Per Image has to be used (bool)"
                long: CPI
                takes_value: true
            - unused_ShowU:
                help: "Show unused point (def=true) (bool)"
                long: ShowU
                takes_value: true
    - GCPVisib:
        about: "Print a list of GCP visibility in images"
        args:
            - unused_Out:
                help: "Output filename (string)"
                long: Out
                takes_value: true
    - GenCode:
        about: "Do some stuff"
    - Genepi:
        about: "Generate 3D/2d synthetical points from orientation"
        args:
            - unused_NbXY:
                help: "Number of point of the Grid (INT)"
                long: NbXY
                takes_value: true
            - unused_NbProf:
                help: "Number of depth (INT)"
                long: NbProf
                takes_value: true
    - GenerateBorderCam:
        about: "Generate the polygone of image contour undistorded"
        args:
            - unused_Int:
                help: "Interior to limit size with bad distorsion, Def=1.0 (REAL)"
                long: Int
                takes_value: true
            - unused_Out:
                help: "File for result, Def= Border-Input (string)"
                long: Out
                takes_value: true
    - Genere_Header_TiffFile:
        about: "Generate Header for internal tiling format"
        args:
            - unused_Out:
                help: "Name of result (string)"
                long: Out
                takes_value: true
    - genmail:
        about: "Do some stuff"
        args:
            - unused_NbByF:
                help: "  * [Name=NbByF] IN (INT)"
                long: NbByF
                takes_value: true
            - unused_SingleFile:
                help: "If specified, all but this one will considered as black-list files (string)"
                long: SingleFile
                takes_value: true
            - unused_Dests:
                help: "Selected dest (for ex [fr] if only french) (vector<std::string>)"
                long: Dests
                takes_value: true
    - GenPairsFile:
        about: "Generate pairs files between one image and a pattern"
        args:
            - unused_Out:
                help: "Output .xml file ; Def=NameCple.xml (string)"
                long: Out
                takes_value: true
    - GenXML2Cpp:
        about: "Do some stuff"
    - GrapheHom:
        about: "Compute XML-Visibility graph from approximate orientation"
        args:
            - unused_TagC:
                help: "  * [Name=TagC] strin (string)"
                long: TagC
                takes_value: true
            - unused_TagOri:
                help: "  * [Name=TagOri] strin (string)"
                long: TagOri
                takes_value: true
            - unused_AltiSol:
                help: "  * [Name=AltiSol] REA (REAL)"
                long: AltiSol
                takes_value: true
            - unused_Dist:
                help: "  * [Name=Dist] REA (REAL)"
                long: Dist
                takes_value: true
            - unused_Rab:
                help: "  * [Name=Rab] REA (REAL)"
                long: Rab
                takes_value: true
            - unused_Terr:
                help: "todo (bool)"
                long: Terr
                takes_value: true
            - unused_Sym:
                help: "todo (bool)"
                long: Sym
                takes_value: true
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
    - Gri2Bin:
        about: "Do some stuff"
    - GrShade:
        about: "Compute shading from depth image"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_FileCol:
                help: "Color file (string)"
                long: FileCol
                takes_value: true
            - unused_Visu:
                help: "  * [Name=Visu] IN (INT)"
                long: Visu
                takes_value: true
            - unused_P0:
                help: "  * [Name=P0] Pt2d (Pt2di)"
                long: P0
                takes_value: true
            - unused_Sz:
                help: "  * [Name=Sz] Pt2d (Pt2di)"
                long: Sz
                takes_value: true
            - unused_FZ:
                help: "  * [Name=FZ] REA (REAL)"
                long: FZ
                takes_value: true
            - unused_DynMed:
                help: "  * [Name=DynMed] REA (REAL)"
                long: DynMed
                takes_value: true
            - unused_Anisotropie:
                help: "  * [Name=Anisotropie] REA (REAL)"
                long: Anisotropie
                takes_value: true
            - unused_NbDir:
                help: "  * [Name=NbDir] IN (INT)"
                long: NbDir
                takes_value: true
            - unused_Brd:
                help: "  * [Name=Brd] IN (INT)"
                long: Brd
                takes_value: true
            - unused_TypeMnt:
                help: "Type (string)"
                long: TypeMnt
                takes_value: true
            - unused_TypeShade:
                help: "Type (string)"
                long: TypeShade
                takes_value: true
            - unused_Dequant:
                help: "  * [Name=Dequant] IN (INT)"
                long: Dequant
                takes_value: true
            - unused_HypsoDyn:
                help: "  * [Name=HypsoDyn] REA (REAL)"
                long: HypsoDyn
                takes_value: true
            - unused_HypsoSat:
                help: "  * [Name=HypsoSat] REA (REAL)"
                long: HypsoSat
                takes_value: true
            - unused_SzMaxDalles:
                help: "  * [Name=SzMaxDalles] Pt2d (Pt2di)"
                long: SzMaxDalles
                takes_value: true
            - unused_SzRecDalles:
                help: "  * [Name=SzRecDalles] IN (INT)"
                long: SzRecDalles
                takes_value: true
            - unused_ModeOmbre:
                help: "in (string)"
                long: ModeOmbre
                takes_value: true
            - unused_Mask:
                help: "Mask file (string)"
                long: Mask
                takes_value: true
            - unused_DericheFact:
                help: "  * [Name=DericheFact] REA (REAL)"
                long: DericheFact
                takes_value: true
            - unused_NbIterF:
                help: "  * [Name=NbIterF] IN (INT)"
                long: NbIterF
                takes_value: true
            - unused_FactExp:
                help: "  * [Name=FactExp] REA (REAL)"
                long: FactExp
                takes_value: true
            - unused_Dyn:
                help: "  * [Name=Dyn] REA (REAL)"
                long: Dyn
                takes_value: true
            - unused_PdsF:
                help: "[CielVu,Local,Grad,Med] (vector<double>)"
                long: PdsF
                takes_value: true
            - unused_ModeColor:
                help: "Color mode (string)"
                long: ModeColor
                takes_value: true
            - unused_NbMed:
                help: "  * [Name=NbMed] IN (INT)"
                long: NbMed
                takes_value: true
            - unused_NbIterMed:
                help: "  * [Name=NbIterMed] IN (INT)"
                long: NbIterMed
                takes_value: true
            - unused_TetaH:
                help: "  * [Name=TetaH] REA (REAL)"
                long: TetaH
                takes_value: true
            - unused_Azimut:
                help: "  * [Name=Azimut] REA (REAL)"
                long: Azimut
                takes_value: true
    - Homol2GND:
        about: "Creates fake ground points for aerotriangulation wedge"
        args:
            - unused_SH:
                help: "Input Homol directory suffix (without |Homol|) (string)"
                long: SH
                takes_value: true
            - unused_nbPts:
                help: "Number of out points (default=4) (INT)"
                long: nbPts
                takes_value: true
            - unused_out:
                help: "out filename base (defaut |homol2gnd_out|) (string)"
                long: out
                takes_value: true
            - unused_ptsName:
                help: "fake points basename (defaut |fakePt|) (string)"
                long: ptsName
                takes_value: true
            - unused_ExpTxt:
                help: "Ascii format for in and out, def=false (bool)"
                long: ExpTxt
                takes_value: true
    - HomolFilterMasq:
        about: "Tool for filter homologous points according to masq"
        args:
            - unused_PostPlan:
                help: "Post to plan, Def : toto ->toto_Masq.tif like with SaisieMasq (string)"
                long: PostPlan
                takes_value: true
            - unused_GlobalMasq:
                help: "Global Masq to add to all image (string)"
                long: GlobalMasq
                takes_value: true
            - unused_KeyCalculMasq:
                help: "For tuning masq per image (string)"
                long: KeyCalculMasq
                takes_value: true
            - unused_KeyEquivNoMasq:
                help: "When given if KENM(i1)==KENM(i2), don't masq (string)"
                long: KeyEquivNoMasq
                takes_value: true
            - unused_Resol:
                help: "Sub Resolution for masq storing, Def=10 (REAL)"
                long: Resol
                takes_value: true
            - unused_ANM:
                help: "Accept no mask, def = true if MasqGlob and false else (bool)"
                long: ANM
                takes_value: true
            - unused_ExpTxt:
                help: "Ascii format for in and out, def=false (bool)"
                long: ExpTxt
                takes_value: true
            - unused_PostIn:
                help: "Post for Input dir Hom, Def= (string)"
                long: PostIn
                takes_value: true
            - unused_PostOut:
                help: "Post for Output dir Hom, Def=MasqFiltered (string)"
                long: PostOut
                takes_value: true
            - unused_OriMasq3D:
                help: "Orientation for Masq 3D (string)"
                long: OriMasq3D
                takes_value: true
            - unused_Masq3D:
                help: "File of Masq3D, Def=AperiCloud_ (string)"
                long: Masq3D
                takes_value: true
            - unused_SelecTer:
                help: "[Per,Prop] Period of tiling on ground selection, Prop=proporion of selected (Pt2dr)"
                long: SelecTer
                takes_value: true
            - unused_DistId:
                help: "Supress pair such that d(P1,P2) < DistId, def unused (REAL)"
                long: DistId
                takes_value: true
    - HomolMergePDVUnik:
        about: "Tool for merge homologous point from unik point of view"
        args:
            - unused_PostIn:
                help: "Post for Input dir Hom, Def= (string)"
                long: PostIn
                takes_value: true
            - unused_PostOut:
                help: "Post for Output dir Hom, Def=MasqFusion (string)"
                long: PostOut
                takes_value: true
            - unused_ExpTxt:
                help: "Ascii format for in and out, def=false (bool)"
                long: ExpTxt
                takes_value: true
            - unused_DirN:
                help: "Supplementary dirs 2 merge (vector<std::string>)"
                long: DirN
                takes_value: true
    - Im2XYZ:
        about: "tool to transform a 2D point (text file) to their 3D cloud homologous"
        args:
            - unused_FilterInput:
                help: "To generate a file of input superposable to output (string)"
                long: FilterInput
                takes_value: true
            - unused_PointIsImRef:
                help: "Point must be corrected from cloud resolution def = true (bool)"
                long: PointIsImRef
                takes_value: true
            - unused_InputImWithZ:
                help: "Input Im point with Z (for Im2XYZ) def=false (bool)"
                long: InputImWithZ
                takes_value: true
    - ImMire:
        about: "For generation of some synthetic calibration image"
        args:
            - unused_Sz:
                help: "Image size, def =[1600,1000] (Pt2di)"
                long: Sz
                takes_value: true
            - unused_Out:
                help: "Result (Def depend of Mode) (string)"
                long: Out
                takes_value: true
            - unused_DoC:
                help: "Add Circle (bool)"
                long: DoC
                takes_value: true
    - Impaint:
        about: "Basic Impainting"
        args:
            - unused_Out:
                help: "Name of Result (string)"
                long: Out
                takes_value: true
            - unused_2Fill:
                help: "Masq of point 2 fill, def = all (string)"
                long: 2Fill
                takes_value: true
    - ImRandGray:
        about: "Generate Random Gray Textured Images"
        args:
            - unused_VRand:
                help: "Vector of noise [Sz1,Pds1,Sz2,Pds2, ...] (vector<double>)"
                long: VRand
                takes_value: true
            - unused_InitR:
                help: "Init Random at each run  (bool)"
                long: InitR
                takes_value: true
            - unused_MacroIm:
                help: "Deterministic Macro Image (Def=None) (string)"
                long: MacroIm
                takes_value: true
            - unused_PdsMI:
                help: "Pds of Macro Image when used (Def=1) (REAL)"
                long: PdsMI
                takes_value: true
    - Init11P:
        about: "Init Internal & External from GCP using 11-parameters algo"
        args:
            - unused_FM:
                help: "Fraser Mode, use all affine parmeters (def=false) (bool)"
                long: FM
                takes_value: true
            - unused_Filter:
                help: "Filter for Image (Def=.*) (string)"
                long: Filter
                takes_value: true
    - InitOriLinear:
        about: "Initialize orientation for linear acquisition"
        args:
            - unused_PatTurn:
                help: "Vector of images when the serie change acquisition direction pose1,pose2... (string)"
                long: PatTurn
                takes_value: true
            - unused_PatAngle:
                help: "Vector of turn angle apha1,alpha2,... (string)"
                long: PatAngle
                takes_value: true
            - unused_WithIdent:
                help: "Initialize with orientation identique (default = false) (bool)"
                long: WithIdent
                takes_value: true
            - unused_Axe:
                help: "Which axe to calcul rotation about (string)"
                long: Axe
                takes_value: true
            - unused_Plan:
                help: "Force using vector [0,0,1] to initialize (garantie all poses will be in a same plan) - (default = false) (bool)"
                long: Plan
                takes_value: true
    - Kugelhupf:
        about: "Semi-automatic fiducial points determination"
        args:
            - unused_TargetHalfSize:
                help: "Target half size in pixels (Def=64) (INT)"
                long: TargetHalfSize
                takes_value: true
            - unused_SearchIncertitude:
                help: "Search incertitude in pixels (Def=5) (INT)"
                long: SearchIncertitude
                takes_value: true
            - unused_SearchStep:
                help: "Search step in pixels (Def=0.5) (REAL)"
                long: SearchStep
                takes_value: true
            - unused_Threshold:
                help: "Limit to accept a correlation (Def=0.90) (REAL)"
                long: Threshold
                takes_value: true
    - Liquor:
        about: "Orientation specialized for linear acquisition"
        args:
            - unused_SzInit:
                help: "Sz of initial interval (Def=50) (INT)"
                long: SzInit
                takes_value: true
            - unused_OverLap:
                help: "Prop overlap (Def=0.1)  (REAL)"
                long: OverLap
                takes_value: true
    - LumRas:
        about: "Compute image mixing with raking light"
    - MakeGrid:
        about: "Generate orientations in a grid format"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
    - Malt:
        about: "Simplified matching (interface to MicMac)"
        args:
            - unused_Master:
                help: " Master image must exist iff Mode=GeomImage, AUTO for Using result of AperoChImSecMM (string)"
                long: Master
                takes_value: true
            - unused_SzW:
                help: "Correlation Window Size (1 means 3x3) (INT)"
                long: SzW
                takes_value: true
            - unused_CorMS:
                help: "New Multi Scale correlation option, def=false, available in image geometry (bool)"
                long: CorMS
                takes_value: true
            - unused_ForDeform:
                help: "Set paramaters when ortho are used for deformation (bool)"
                long: ForDeform
                takes_value: true
            - unused_UseGpu:
                help: "Use Cuda acceleration, def=false (bool)"
                long: UseGpu
                takes_value: true
            - unused_Regul:
                help: "Regularization factor (REAL)"
                long: Regul
                takes_value: true
            - unused_DirMEC:
                help: "Subdirectory where the results will be stored (string)"
                long: DirMEC
                takes_value: true
            - unused_DirOF:
                help: "Subdirectory for ortho (def in Ortho- (string)"
                long: DirOF
                takes_value: true
            - unused_UseTA:
                help: "Use TA as Masq when it exists (Def is true) (INT)"
                long: UseTA
                takes_value: true
            - unused_ZoomF:
                help: "Final zoom, (Def 2 in ortho,1 in MNE) (INT)"
                long: ZoomF
                takes_value: true
            - unused_ZoomI:
                help: "Initial Zoom, (Def depends on number of images) (INT)"
                long: ZoomI
                takes_value: true
            - unused_ZPas:
                help: "Quantification step in equivalent pixel (def=0.4) (REAL)"
                long: ZPas
                takes_value: true
            - unused_Exe:
                help: "Execute command (Def is true !!) (INT)"
                long: Exe
                takes_value: true
            - unused_Repere:
                help: "Local system of coordinates (string)"
                long: Repere
                takes_value: true
            - unused_NbVI:
                help: "Number of Visible Images required (Def = 3) (INT)"
                long: NbVI
                takes_value: true
            - unused_HrOr:
                help: "Compute High Resolution Ortho (bool)"
                long: HrOr
                takes_value: true
            - unused_LrOr:
                help: "Compute Low Resolution Ortho (bool)"
                long: LrOr
                takes_value: true
            - unused_DirTA:
                help: "Directory of TA (for mask) (string)"
                long: DirTA
                takes_value: true
            - unused_Purge:
                help: "Purge the directory of Results before compute (bool)"
                long: Purge
                takes_value: true
            - unused_DoMEC:
                help: "Do the Matching (bool)"
                long: DoMEC
                takes_value: true
            - unused_DoOrtho:
                help: "Do the Ortho (Def=mDoMEC) (bool)"
                long: DoOrtho
                takes_value: true
            - unused_UnAnam:
                help: "Compute the un-anamorphosed DTM and ortho (Def context dependent) (bool)"
                long: UnAnam
                takes_value: true
            - unused_2Ortho:
                help: "Do both anamorphosed ans un-anamorphosed ortho (when applyable)  (bool)"
                long: 2Ortho
                takes_value: true
            - unused_ZInc:
                help: "Incertitude on Z (in proportion of average depth, def=0.3)  (REAL)"
                long: ZInc
                takes_value: true
            - unused_DefCor:
                help: "Default Correlation in un correlated pixels (Def=0.2)  (REAL)"
                long: DefCor
                takes_value: true
            - unused_CostTrans:
                help: "Cost to change from correlation to uncorrelation (Def=2.0)  (REAL)"
                long: CostTrans
                takes_value: true
            - unused_Etape0:
                help: "First Step (Def=1)  (INT)"
                long: Etape0
                takes_value: true
            - unused_AffineLast:
                help: "Affine Last Etape with Step Z/2 (Def=true)  (bool)"
                long: AffineLast
                takes_value: true
            - unused_ResolOrtho:
                help: "Resolution of ortho, relatively to images (Def=1.0; 0.5 means smaller images, i.e. decrease the resolution)  (REAL)"
                long: ResolOrtho
                takes_value: true
            - unused_ImMNT:
                help: "Filter to select images used for matching (Def All, usable with ortho)  (string)"
                long: ImMNT
                takes_value: true
            - unused_ImOrtho:
                help: "Filter to select images used for ortho (Def All)  (string)"
                long: ImOrtho
                takes_value: true
            - unused_ZMoy:
                help: "Average value of Z (REAL)"
                long: ZMoy
                takes_value: true
            - unused_Spherik:
                help: "If true the surface for rectification is a sphere (bool)"
                long: Spherik
                takes_value: true
            - unused_WMI:
                help: "Mininum width of reduced images (to fix ZoomInit) (REAL)"
                long: WMI
                takes_value: true
            - unused_MasqIm:
                help: "Masq per Im; Def None; Use |Masq| for standard result of SaisieMasq (string)"
                long: MasqIm
                takes_value: true
            - unused_MasqImGlob:
                help: "Glob Masq per Im : if uses, give full name of masq (for ex toto.tif)  (string)"
                long: MasqImGlob
                takes_value: true
            - unused_IncMax:
                help: "Maximum incidence of image (REAL)"
                long: IncMax
                takes_value: true
            - unused_BoxClip:
                help: "To Clip Computation, normalized image coordinates ([0,0,1,1] means full box) (Box2dr)"
                long: BoxClip
                takes_value: true
            - unused_BoxTerrain:
                help: "([Xmin,Ymin,Xmax,Ymax]) (Box2dr)"
                long: BoxTerrain
                takes_value: true
            - unused_ResolTerrain:
                help: "Ground Resol (Def automatically computed) (REAL)"
                long: ResolTerrain
                takes_value: true
            - unused_RRI:
                help: "Ratio Resol Image (f.e. if set to 0.8 and image resol is 2.0, will be computed at 1.6) (REAL)"
                long: RRI
                takes_value: true
            - unused_RoundResol:
                help: "Use rounding of resolution (def context dependent,tuning purpose) (bool)"
                long: RoundResol
                takes_value: true
            - unused_GCC:
                help: "Generate export for Cube Correlation (bool)"
                long: GCC
                takes_value: true
            - unused_EZA:
                help: "Export Z Absolute (bool)"
                long: EZA
                takes_value: true
            - unused_Equiv:
                help: "Equivalent classes, as a set of pattern, def=None (vector<std::string>)"
                long: Equiv
                takes_value: true
            - unused_MOri:
                help: "Mode Orientation (GRID or RTO) if not XML frame camera (string)"
                long: MOri
                takes_value: true
            - unused_MaxFlow:
                help: "Use MaxFlow(MinCut) instead of 2D ProgDyn (SGM), slower sometime better, Def=false  (bool)"
                long: MaxFlow
                takes_value: true
            - unused_SzRec:
                help: "Sz of overlap between computation tiles, Def=50; for some rare side effects (INT)"
                long: SzRec
                takes_value: true
            - unused_Masq3D:
                help: "Name of 3D Masq (string)"
                long: Masq3D
                takes_value: true
            - unused_NbProc:
                help: "Nb Proc Used (INT)"
                long: NbProc
                takes_value: true
            - unused_PSIBN:
                help: "Penal for Automatic Selection of Images to Best Nadir (Def=-1, dont use) (REAL)"
                long: PSIBN
                takes_value: true
            - unused_InternalNoIncid:
                help: "Internal Use (bool)"
                long: InternalNoIncid
                takes_value: true
            - unused_PtDebug:
                help: "Internal Use (Point of debuging) (Pt2di)"
                long: PtDebug
                takes_value: true
            - unused_ForceZFais:
                help: "Force Z Faisecau evan with stenope camera (bool)"
                long: ForceZFais
                takes_value: true
            - unused_VSND:
                help: "Value Special No Data (INT)"
                long: VSND
                takes_value: true
    - MapCmd:
        about: "Transforms a command working on a single file in a command working on a set of files"
    - Martini:
        about: "New orientation initialisation (uncomplete, still in dev...)"
        args:
            - unused_OriCalib:
                help: "Orientation for calibration  (string)"
                long: OriCalib
                takes_value: true
            - unused_Exe:
                help: "Execute commands, def=true (if false, only print) (bool)"
                long: Exe
                takes_value: true
            - unused_SH:
                help: "Prefix Homologue , Def=|| (string)"
                long: SH
                takes_value: true
            - unused_ExtName:
                help: "User's added Prefix , Def=|| (string)"
                long: ExtName
                takes_value: true
            - unused_ModeNO:
                help: "Mode Def=Std (string)"
                long: ModeNO
                takes_value: true
    - MartiniGin:
        about: "New orientation initialisation (uncomplete, still in dev...)"
        args:
            - unused_OriCalib:
                help: "Orientation for calibration  (string)"
                long: OriCalib
                takes_value: true
            - unused_Exe:
                help: "Execute commands, def=true (if false, only print) (bool)"
                long: Exe
                takes_value: true
            - unused_SH:
                help: "Prefix Homologue , Def=|| (string)"
                long: SH
                takes_value: true
            - unused_ExtName:
                help: "User's added Prefix , Def=|| (string)"
                long: ExtName
                takes_value: true
            - unused_ModeNO:
                help: "Mode Def=Std (string)"
                long: ModeNO
                takes_value: true
    - MasqMaker:
        about: "Create Mask form image values"
        args:
            - unused_MasqSup:
                help: "Supplementary mask (string)"
                long: MasqSup
                takes_value: true
            - unused_SzW:
                help: "SzW for masking (def=0) (INT)"
                long: SzW
                takes_value: true
    - MergeDepthMap:
        about: "Merging of individual, stackable, depth maps"
    - MergeHomol:
        about: "Merge Homol dir"
    - MergePly:
        about: "Merge ply files"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_Bin:
                help: "Generate Binary or Ascii file (Def=true, Binary) (bool)"
                long: Bin
                takes_value: true
    - MeshProjOnImg:
        about: "Reproject mesh on image"
        args:
            - unused_zoomF:
                help: "1 -> sz origin, 0.2 -> 1/5 size - default = 0.2 (REAL)"
                long: zoomF
                takes_value: true
            - unused_oriTri:
                help: "consider orientation of triangle/cam (bool)"
                long: oriTri
                takes_value: true
            - unused_click:
                help: "true => draw each triangle by each click - default = false (bool)"
                long: click
                takes_value: true
            - unused_ptsInteret:
                help: "pack pts d'interet - give it with 1 img only (string)"
                long: ptsInteret
                takes_value: true
            - unused_SH:
                help: "pack homol - give it with 2 image only (string)"
                long: SH
                takes_value: true
    - MICMAC:
        about: "Computes image matching from oriented images"
    - MICMACSaisieLiaisons:
        about: "Low level version of SEL, not recommended"
    - MM1P:
        about: "Matching One Pair of images"
        args:
            - unused_Exe:
                help: "Execute Commands, else only print them (Def=true) (bool)"
                long: Exe
                takes_value: true
            - unused_Show:
                help: "Show Commande (bool)"
                long: Show
                takes_value: true
            - unused_Zoom0:
                help: "Zoom Init (Def=64) (INT)"
                long: Zoom0
                takes_value: true
            - unused_ZoomF:
                help: "Zoom Final (Def=1) (INT)"
                long: ZoomF
                takes_value: true
            - unused_CreateE:
                help: " Create Epipolar (def = true when appliable) (bool)"
                long: CreateE
                takes_value: true
            - unused_2Way:
                help: "Match in 2 Way (Def=true) (bool)"
                long: 2Way
                takes_value: true
            - unused_CMS:
                help: "Multi Scale Correl (Def=ByEpip) (bool)"
                long: CMS
                takes_value: true
            - unused_DoMR:
                help: "Do re-entering masq (Def=true) (bool)"
                long: DoMR
                takes_value: true
            - unused_SigmaP:
                help: "Sigma Pixel for coherence (Def=1.5) (REAL)"
                long: SigmaP
                takes_value: true
            - unused_BoxIm:
                help: "Box of calc in Epip, tuning purpose (Def=All image) (Box2di)"
                long: BoxIm
                takes_value: true
            - unused_Purge:
                help: "Purge directory, tuning (Def=true) (bool)"
                long: Purge
                takes_value: true
            - unused_PurgeAtEnd:
                help: "Purge Final Resul (bool)"
                long: PurgeAtEnd
                takes_value: true
            - unused_InParal:
                help: "Do it in parallel (Def=true) (bool)"
                long: InParal
                takes_value: true
            - unused_BascMTD:
                help: "Metadata of file to bascule (Def No Basc) (string)"
                long: BascMTD
                takes_value: true
            - unused_RIE:
                help: ",Inverse re-sampling from epipolar (bool)"
                long: RIE
                takes_value: true
            - unused_DoHom:
                help: "Do Hom in epolar (Def=false) (bool)"
                long: DoHom
                takes_value: true
            - unused_DegCE:
                help: "Degree of epipolar correction when Qual Orient is not high (Def=4) (INT)"
                long: DegCE
                takes_value: true
            - unused_QualOr:
                help: "Quality orient (in High, Average, Low, Def= Low) (string)"
                long: QualOr
                takes_value: true
            - unused_DoPly:
                help: "Generate Ply (bool)"
                long: DoPly
                takes_value: true
            - unused_ScalePly:
                help: "Dowsize of generated Ply (Def=4) (INT)"
                long: ScalePly
                takes_value: true
            - unused_DoOMF:
                help: "Do Only Masq Final (tuning purpose) (bool)"
                long: DoOMF
                takes_value: true
            - unused_DCE:
                help: "Debug Create Etpi (tuning purpose) (bool)"
                long: DCE
                takes_value: true
            - unused_HasVeg:
                help: "Has vegetation, Def= false (bool)"
                long: HasVeg
                takes_value: true
            - unused_HasSBG:
                help: "Has Sky Background , Def= true (bool)"
                long: HasSBG
                takes_value: true
            - unused_Masq3D:
                help: "Masq 3D to filter points (string)"
                long: Masq3D
                takes_value: true
            - unused_UseGpu:
                help: "Use cuda (Def=false) (bool)"
                long: UseGpu
                takes_value: true
            - unused_DefCor:
                help: "Def cor (Def=0.5) (REAL)"
                long: DefCor
                takes_value: true
            - unused_ZReg:
                help: "Regularisation factor (Def=0.05) (REAL)"
                long: ZReg
                takes_value: true
            - unused_ExpTxt:
                help: "Use txt tie points for generating epipolar geometry (Def false, e.g. use dat format) (bool)"
                long: ExpTxt
                takes_value: true
    - MM2DPosSism:
        about: "Simplified interface for post 2D post sismic deformation"
        args:
            - unused_Masq:
                help: "Mask of focus zone (def=none) (string)"
                long: Masq
                takes_value: true
            - unused_Teta:
                help: "Direction of seism if any (in radian) (REAL)"
                long: Teta
                takes_value: true
            - unused_Exe:
                help: "Execute command , def=true (tuning purpose) (bool)"
                long: Exe
                takes_value: true
            - unused_SzW:
                help: "Size of window (Def=4, mean 9x9) (INT)"
                long: SzW
                takes_value: true
            - unused_Reg:
                help: "Regularization (Def=0.3) (REAL)"
                long: Reg
                takes_value: true
            - unused_Dequant:
                help: "Dequantify (Def=true) (bool)"
                long: Dequant
                takes_value: true
            - unused_Inc:
                help: "Initial uncertainty (Def=2.0) (REAL)"
                long: Inc
                takes_value: true
            - unused_SsResolOpt:
                help: "Merging factor (Def=4) (INT)"
                long: SsResolOpt
                takes_value: true
            - unused_DirMEC:
                help: "Subdirectory where the results will be stored (Def='MEC/') (string)"
                long: DirMEC
                takes_value: true
            - unused_PxMoy:
                help: "Px-Moy , Def=(0,0) (Pt2dr)"
                long: PxMoy
                takes_value: true
            - unused_ZoomInit:
                help: "Initial Zoom, Def=1 (can be long of Inc>2) (INT)"
                long: ZoomInit
                takes_value: true
    - MMByP:
        about: "Matching By Pair of images"
        args:
            - unused_Zoom0:
                help: "Zoom Init, Def=64 (INT)"
                long: Zoom0
                takes_value: true
            - unused_ZoomF:
                help: "Zoom Final, Def=1 (INT)"
                long: ZoomF
                takes_value: true
            - unused_Delaunay:
                help: "Add Delaunay edges in pair to match, Def=true on ground (bool)"
                long: Delaunay
                takes_value: true
            - unused_FilePair:
                help: "Add a File containing explicit image pair (as in Tapioca, a <SauvegardeNamedRel> struct ... (string)"
                long: FilePair
                takes_value: true
            - unused_MMImSec:
                help: "Add pair from AperoChImSecMM,  Def=true in mode Statue (bool)"
                long: MMImSec
                takes_value: true
            - unused_ImLine:
                help: "Add pair for successive images, based on the numeric value in the image name, Def=true in mode Forest (bool)"
                long: ImLine
                takes_value: true
            - unused_ByStrip:
                help: "Pair in same strip, first () : strip, second () : num in strip (or reverse with StripIsFisrt) (string)"
                long: ByStrip
                takes_value: true
            - unused_StripIsFisrt:
                help: "If true : first expr is strip, second is num in strip Def=true (bool)"
                long: StripIsFisrt
                takes_value: true
            - unused_DeltaStrip:
                help: "Delta in same strip (Def=1,apply with mPairByStrip) (INT)"
                long: DeltaStrip
                takes_value: true
            - unused_Sym:
                help: "Symetrise all pair (Def=true) (bool)"
                long: Sym
                takes_value: true
            - unused_Show:
                help: "Show details (def = false)) (bool)"
                long: Show
                takes_value: true
            - unused_Inc:
                help: "Uncertainty interval for matching (REAL)"
                long: Inc
                takes_value: true
            - unused_TetaStrip:
                help: "If used, cut strip when dir of vector > 45 degree from TetaStrip (REAL)"
                long: TetaStrip
                takes_value: true
            - unused_SMD:
                help: "Skip Matching When Already Done (Def=false) (bool)"
                long: SMD
                takes_value: true
            - unused_Do:
                help: "Step to Do in [Apero-Ch-Im,Pyram,MetaData,Correl,Reech,Fusion,inspect], Def |APMCFR| (i.e. All Step) (string)"
                long: Do
                takes_value: true
            - unused_ByMM1P:
                help: "Do match using new MM1P, def = true (bool)"
                long: ByMM1P
                takes_value: true
            - unused_ImOfBox:
                help: "Image to define box for MTD (test purpose to limit size of result) (string)"
                long: ImOfBox
                takes_value: true
            - unused_BoxOfIm:
                help: "Associated to ImOfBox, def = full (Box2di)"
                long: BoxOfIm
                takes_value: true
            - unused_ParMMI:
                help: "If true each MM if // (| expert| option, Def=false currently) (bool)"
                long: ParMMI
                takes_value: true
            - unused_QualOr:
                help: "Quality orient (in High, Average, Low, Def= Low with statue) (string)"
                long: QualOr
                takes_value: true
            - unused_RIEPar:
                help: "Internal use (debug Reech Inv Epip) (bool)"
                long: RIEPar
                takes_value: true
            - unused_TimesExe:
                help: "Internal use (debug Reech Inv Epip) (INT)"
                long: TimesExe
                takes_value: true
            - unused_DCE:
                help: "Debug Create Epip (bool)"
                long: DCE
                takes_value: true
            - unused_DebugMMByP:
                help: "Debug this programm (bool)"
                long: DebugMMByP
                takes_value: true
            - unused_DoOMF:
                help: "Do Only Masq Final (tuning purpose) (bool)"
                long: DoOMF
                takes_value: true
            - unused_HasVeg:
                help: "Scene contains vegetation (Def=true on Ground) (bool)"
                long: HasVeg
                takes_value: true
            - unused_HasSBG:
                help: "Scene has sky (or homogeneous) background (Def=false on Ground) (bool)"
                long: HasSBG
                takes_value: true
            - unused_Masters:
                help: "If specified, only pair containing a master will be selected (string)"
                long: Masters
                takes_value: true
            - unused_Masq3D:
                help: "If specified the 3D masq (string)"
                long: Masq3D
                takes_value: true
            - unused_CalPerIm:
                help: "true id Calib per Im were used, def=false (bool)"
                long: CalPerIm
                takes_value: true
            - unused_PenPerIm:
                help: "Penality Per Image in choice im sec (REAL)"
                long: PenPerIm
                takes_value: true
            - unused_Purge:
                help: "Purge unused temporay files (Def=true, may be incomplete during some times) (bool)"
                long: Purge
                takes_value: true
            - unused_UseGpu:
                help: "Use cuda (Def=false) (bool)"
                long: UseGpu
                takes_value: true
            - unused_DefCor:
                help: "Def corr (context condepend 0.5 Statue, 0.2 Forest) (REAL)"
                long: DefCor
                takes_value: true
            - unused_ZReg:
                help: "Z Regul (context condepend,  0.05 Statue, 0.02 Forest) (REAL)"
                long: ZReg
                takes_value: true
            - unused_ExpTxt:
                help: "Use txt tie points for determining image pairs and/or computing epipolar geometry (Def false, e.g. use dat format) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ExpImSec:
                help: "Export ImSec def=true (put false if set elsewhere) (bool)"
                long: ExpImSec
                takes_value: true
    - MMCalcSzWCor:
        about: "Compute Image of Size of correlation windows (Atomic tool, for adaptive window in geom image)"
        args:
            - unused_P0:
                help: "Origin (Def=(0,0)) (Pt2di)"
                long: P0
                takes_value: true
            - unused_Sz:
                help: "Size (Def full size of tiff file) (Pt2di)"
                long: Sz
                takes_value: true
            - unused_Wsz:
                help: "Size of window (Def no window) (Pt2dr)"
                long: Wsz
                takes_value: true
            - unused_Out:
                help: "Out (string)"
                long: Out
                takes_value: true
    - MMHomCorOri:
        about: "Tool to compute homologues for correcting orientation in epip matching"
        args:
            - unused_Match:
                help: "Do matching (Def = true) (bool)"
                long: Match
                takes_value: true
            - unused_ZoomF:
                help: "Zoom Final (INT)"
                long: ZoomF
                takes_value: true
    - MMInitialModel:
        about: "Initial Model for MicMac"
        args:
            - unused_Visu:
                help: "Interactif Visualization (tuning purpose, program will stop at breakpoint) (bool)"
                long: Visu
                takes_value: true
            - unused_DoPly:
                help: "Generate ply ,for tuning purpose (Def=false) (bool)"
                long: DoPly
                takes_value: true
            - unused_Zoom:
                help: "Zoom of computed models (Def=8) (INT)"
                long: Zoom
                takes_value: true
            - unused_ReduceExp:
                help: "Down scaling of cloud , XML and ply (Def=3) (REAL)"
                long: ReduceExp
                takes_value: true
            - unused_Do2Z:
                help: "Excute a first step at 2*Zoom (Def=true) (bool)"
                long: Do2Z
                takes_value: true
            - unused_DoMatch:
                help: "Do |classical| MicMac at end (Def=true) (bool)"
                long: DoMatch
                takes_value: true
            - unused_Masq3D:
                help: "3D masq when exist (Def=true) (string)"
                long: Masq3D
                takes_value: true
            - unused_ExportEnv:
                help: "Export Max Min surfaces (Def=false) (bool)"
                long: ExportEnv
                takes_value: true
            - unused_DoPyram:
                help: "Do Pyram (set false when //izing)   (bool)"
                long: DoPyram
                takes_value: true
            - unused_SzW:
                help: "Correlation Window Size (Def=1 means 3x3) (INT)"
                long: SzW
                takes_value: true
    - MMMergeCloud:
        about: "Merging of low resol cloud, in preparation 2 MicMac"
        args:
            - unused_Key:
                help: "Key Assoc Im->Nuage (string)"
                long: Key
                takes_value: true
            - unused_NbCelGraph:
                help: "Nb Cell/Im To limit computation time, def=15 (INT)"
                long: NbCelGraph
                takes_value: true
            - unused_PercRecMin:
                help: "Percent of point for graph (REAL)"
                long: PercRecMin
                takes_value: true
    - MMPyram:
        about: "Computes pyram for micmac (internal use)"
        args:
            - unused_ImSec:
                help: "Output destination (Def= same as Orientation-parameter) (string)"
                long: ImSec
                takes_value: true
    - MMTestAllAuto:
        about: "Full automatic version for 1 view point, test mode"
        args:
            - unused_ZoomF:
                help: "Zoom Final, def=2 (INT)"
                long: ZoomF
                takes_value: true
    - MMTestOrient:
        about: "Tool for testing quality of orientation"
        args:
            - unused_Dir:
                help: "Directory, Def=./ (string)"
                long: Dir
                takes_value: true
            - unused_Zoom0:
                help: "Zoom init, pow of 2  in [128,8], Def depend of size (INT)"
                long: Zoom0
                takes_value: true
            - unused_ZoomF:
                help: "Zoom init,  pow of 2  in [4,1], Def=2 (INT)"
                long: ZoomF
                takes_value: true
            - unused_PB:
                help: "Push broom sensor (bool)"
                long: PB
                takes_value: true
            - unused_GB:
                help: "Gen Bundle Mode (bool)"
                long: GB
                takes_value: true
            - unused_MOri:
                help: "Mode Orientation (GRID or RTO), Mandatory in PB (string)"
                long: MOri
                takes_value: true
            - unused_ZMoy:
                help: "Average Z, Mandatory in PB (REAL)"
                long: ZMoy
                takes_value: true
            - unused_ZInc:
                help: "Incertitude on Z, Mandatory in PB (REAL)"
                long: ZInc
                takes_value: true
            - unused_ShowCom:
                help: "Show MicMac command (tuning purpose) (bool)"
                long: ShowCom
                takes_value: true
            - unused_ExportDepl:
                help: "Export result as displacement maps (bool)"
                long: ExportDepl
                takes_value: true
            - unused_DirMEC:
                help: "Output directory (Def GeoI-Px/) (string)"
                long: DirMEC
                takes_value: true
    - MMXmlXif:
        about: "Generate Xml from Xif (internal use mainly)"
        args:
            - unused_toto:
                help: "  * [Name=toto] strin (string)"
                long: toto
                takes_value: true
    - mmxv:
        about: "Interface to xv (due to problem in tiff lib)"
    - Morito:
        about: "Merge set of Orientations with common values"
        args:
            - unused_WithOutLayer:
                help: "Is robust estimation requires or simply L2 (Def=false, other not supported now) (bool)"
                long: WithOutLayer
                takes_value: true
            - unused_Dir:
                help: "Global directory, Def=./ (string)"
                long: Dir
                takes_value: true
    - MpDcraw:
        about: "Interface to dcraw"
        args:
            - unused_Exe:
                help: "  * [Name=Exe] IN (INT)"
                long: Exe
                takes_value: true
            - unused_IC:
                help: "  * [Name=IC] strin (string)"
                long: IC
                takes_value: true
            - unused_Purge:
                help: "  * [Name=Purge] IN (INT)"
                long: Purge
                takes_value: true
            - unused_Add:
                help: "  * [Name=Add] strin (string)"
                long: Add
                takes_value: true
            - unused_Rev:
                help: "  * [Name=Rev] IN (INT)"
                long: Rev
                takes_value: true
            - unused_DOIDE:
                help: "  * [Name=DOIDE] IN (INT)"
                long: DOIDE
                takes_value: true
            - unused_MkF:
                help: "  * [Name=MkF] strin (string)"
                long: MkF
                takes_value: true
            - unused_MkAdd:
                help: "  * [Name=MkAdd] boo (bool)"
                long: MkAdd
                takes_value: true
            - unused_IsRelancedByThis:
                help: "  * [Name=IsRelancedByThis] IN (INT)"
                long: IsRelancedByThis
                takes_value: true
    - MPDtest:
        about: "My own test"
    - MyRename:
        about: "File renaming using posix regular expression"
        args:
            - unused_Exe:
                help: "  * [Name=Exe] IN (INT)"
                long: Exe
                takes_value: true
            - unused_Niv:
                help: "  * [Name=Niv] IN (INT)"
                long: Niv
                takes_value: true
            - unused_F:
                help: "  * [Name=F] IN (INT)"
                long: F
                takes_value: true
            - unused_FD:
                help: "  * [Name=FD] IN (INT)"
                long: FD
                takes_value: true
            - unused_AddFoc:
                help: "  * [Name=AddFoc] IN (INT)"
                long: AddFoc
                takes_value: true
            - unused_Mod:
                help: "When spcified add Num of Image % Mod  (INT)"
                long: Mod
                takes_value: true
            - unused_File2M:
                help: "  * [Name=File2M] strin (string)"
                long: File2M
                takes_value: true
            - unused_Full:
                help: "  * [Name=Full] boo (bool)"
                long: Full
                takes_value: true
            - unused_LastFirst:
                help: "Treat the last image first (Def=false) (bool)"
                long: LastFirst
                takes_value: true
            - unused_PrfNum:
                help: "Add a numerical growing prefix, must be diff from 0 (INT)"
                long: PrfNum
                takes_value: true
            - unused_PatSub:
                help: "  * [Name=PatSub] strin (string)"
                long: PatSub
                takes_value: true
    - NewTapas:
        about: "Replace OldTapas - now same as Tapas"
        args:
            - unused_ExpTxt:
                help: "Export in text format (Def=false) (INT)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "Directory of Output Orientation (string)"
                long: Out
                takes_value: true
            - unused_InCal:
                help: "Directory of Input Internal Orientation (Calibration) (string)"
                long: InCal
                takes_value: true
            - unused_InOri:
                help: "Directory of Input External Orientation (string)"
                long: InOri
                takes_value: true
            - unused_DoC:
                help: "Do Compensation (INT)"
                long: DoC
                takes_value: true
            - unused_ForCalib:
                help: "Is for calibration (Change def value of LMV and prop diag)? (INT)"
                long: ForCalib
                takes_value: true
            - unused_Focs:
                help: "Keep images with focal length inside range [A,B] (A,B in mm) (Def=keep all) (Pt2dr)"
                long: Focs
                takes_value: true
            - unused_VitesseInit:
                help: "  * [Name=VitesseInit] IN (INT)"
                long: VitesseInit
                takes_value: true
            - unused_PPRel:
                help: "Principal point shift (Pt2dr)"
                long: PPRel
                takes_value: true
            - unused_Decentre:
                help: "Principal point is shifted (Def=false) (INT)"
                long: Decentre
                takes_value: true
            - unused_PropDiag:
                help: "Hemi-spherik fisheye diameter to diagonal ratio (REAL)"
                long: PropDiag
                takes_value: true
            - unused_SauvAutom:
                help: "Save intermediary results to, Set NONE if dont want any (string)"
                long: SauvAutom
                takes_value: true
            - unused_ImInit:
                help: "Force first image (string)"
                long: ImInit
                takes_value: true
            - unused_MOI:
                help: "MOI (bool)"
                long: MOI
                takes_value: true
            - unused_DBF:
                help: "Debug (internal use : DebugPbCondFaisceau=true)  (INT)"
                long: DBF
                takes_value: true
            - unused_Debug:
                help: "Partial file for debug (bool)"
                long: Debug
                takes_value: true
            - unused_DegRadMax:
                help: "Max degree of radial, default model dependent (INT)"
                long: DegRadMax
                takes_value: true
            - unused_DegGen:
                help: "Max degree of general polynome, default model dependent (generally 0 or 1) (INT)"
                long: DegGen
                takes_value: true
            - unused_LibAff:
                help: "Free affine parameter, Def=true (bool)"
                long: LibAff
                takes_value: true
            - unused_LibDec:
                help: "Free decentric parameter, Def=true (bool)"
                long: LibDec
                takes_value: true
            - unused_LibPP:
                help: "Free principal point, Def=true (bool)"
                long: LibPP
                takes_value: true
            - unused_LibCP:
                help: "Free distorsion center, Def=true (bool)"
                long: LibCP
                takes_value: true
            - unused_LibFoc:
                help: "Free focal, Def=true (bool)"
                long: LibFoc
                takes_value: true
            - unused_RapTxt:
                help: "RapTxt (string)"
                long: RapTxt
                takes_value: true
            - unused_LinkPPaPPs:
                help: "Link PPa and PPs (double) (REAL)"
                long: LinkPPaPPs
                takes_value: true
            - unused_FrozenPoses:
                help: "List of frozen poses (pattern) (string)"
                long: FrozenPoses
                takes_value: true
            - unused_FreeCalibInit:
                help: "Free calibs as soon as created (Def=false) (bool)"
                long: FreeCalibInit
                takes_value: true
            - unused_FrozenCalibs:
                help: "List of frozen calibration (pattern) (string)"
                long: FrozenCalibs
                takes_value: true
            - unused_FreeCalibs:
                help: "List of free calibration (pattern, Def=|.*|) (string)"
                long: FreeCalibs
                takes_value: true
            - unused_SH:
                help: "Set of Hom, Def=||, give MasqFiltered for result of HomolFilterMasq (string)"
                long: SH
                takes_value: true
            - unused_RefineAll:
                help: "More refinement at all step, safer and more accurate, but slower, def=true (bool)"
                long: RefineAll
                takes_value: true
            - unused_ImMinMax:
                help: "Image min and max (may avoid tricky pattern ...) (vector<std::string>)"
                long: ImMinMax
                takes_value: true
            - unused_EcMax:
                help: "Final threshold for residual, def = 5.0  (REAL)"
                long: EcMax
                takes_value: true
            - unused_EcInit:
                help: "Inital threshold for residual def = [100,5.0]  (Pt2dr)"
                long: EcInit
                takes_value: true
            - unused_CondMaxPano:
                help: "Precaution for conditionning with Panoramic images, Def=1e4 (old was 0)  (REAL)"
                long: CondMaxPano
                takes_value: true
            - unused_SinglePos:
                help: "Pattern of single Pos Calib to save [Pose,Calib] (vector<std::string>)"
                long: SinglePos
                takes_value: true
            - unused_RankInitF:
                help: "Order of focal initialisation, ref id distotion =2, Def=3  (INT)"
                long: RankInitF
                takes_value: true
            - unused_RankInitPP:
                help: "Order of Principal point initialisation, ref id distotion =2, Def=4 (INT)"
                long: RankInitPP
                takes_value: true
            - unused_RegulDist:
                help: "Parameter fo RegulDist [Val,Grad,Hessian,NbCase,SeuilNb] (vector<double>)"
                long: RegulDist
                takes_value: true
            - unused_MulLVM:
                help: "Multipier Levenberg Markard (REAL)"
                long: MulLVM
                takes_value: true
    - Nuage2Ply:
        about: "Convert depth map into point cloud"
        args:
            - unused_Sz:
                help: "Sz (to crop) (Pt2dr)"
                long: Sz
                takes_value: true
            - unused_P0:
                help: "Origin (to crop) (Pt2dr)"
                long: P0
                takes_value: true
            - unused_Out:
                help: "Name of result (default toto.xml => toto.ply) (string)"
                long: Out
                takes_value: true
            - unused_Scale:
                help: "Do change the scale of result (def=1, 2 mean smaller) (REAL)"
                long: Scale
                takes_value: true
            - unused_Attr:
                help: "Image to colour the point, or [R,G,B] when constant colour (string)"
                long: Attr
                takes_value: true
            - unused_Comments:
                help: "Commentary to add in the ply file (Def=None) (vector<std::string>)"
                long: Comments
                takes_value: true
            - unused_Bin:
                help: "Generate Binary or Ascii (Def=1, Binary) (INT)"
                long: Bin
                takes_value: true
            - unused_Mask:
                help: "Supplementary mask image (string)"
                long: Mask
                takes_value: true
            - unused_SeuilMask:
                help: "Theshold for supplementary mask (REAL)"
                long: SeuilMask
                takes_value: true
            - unused_Dyn:
                help: "Dynamic of attribute (REAL)"
                long: Dyn
                takes_value: true
            - unused_DoPly:
                help: "Do Ply, def = true (INT)"
                long: DoPly
                takes_value: true
            - unused_DoXYZ:
                help: "Do XYZ, export as RGB image where R=X,G=Y,B=Z (INT)"
                long: DoXYZ
                takes_value: true
            - unused_Normale:
                help: "Add normale (Def=false, usable for Poisson) (INT)"
                long: Normale
                takes_value: true
            - unused_NormByC:
                help: "Replace normal (Def=0, 2=optical center 1=point to center vector) (INT)"
                long: NormByC
                takes_value: true
            - unused_ExagZ:
                help: "To exagerate the depth, Def=1.0 (REAL)"
                long: ExagZ
                takes_value: true
            - unused_RatioAttrCarte:
                help: "  * [Name=RatioAttrCarte] REA (REAL)"
                long: RatioAttrCarte
                takes_value: true
            - unused_Mesh:
                help: "Do mesh (Def=false) (bool)"
                long: Mesh
                takes_value: true
            - unused_64B:
                help: "To generate 64 Bits ply, Def=false, WARN = do not work properly with meshlab or cloud compare (bool)"
                long: 64B
                takes_value: true
            - unused_Offs:
                help: "Offset in points to limit 32 Bits accuracy problem (Pt3dr)"
                long: Offs
                takes_value: true
            - unused_NeighMask:
                help: "Mask for neighboors when larger than point selection (for normals computation) (string)"
                long: NeighMask
                takes_value: true
            - unused_ForceRGB:
                help: "Force RGB even with gray image (Def=true because of bug in QT) (bool)"
                long: ForceRGB
                takes_value: true
    - NuageBascule:
        about: "To Change geometry of depth map"
        args:
            - unused_ByP:
                help: "By process in parallel, Def = true (faster and avoid memory overflow) (bool)"
                long: ByP
                takes_value: true
            - unused_AutoResize:
                help: "Clip input  to minimal size, Def = true (bool)"
                long: AutoResize
                takes_value: true
            - unused_AutoClipIn:
                help: "Clip result to minimal size (bool)"
                long: AutoClipIn
                takes_value: true
            - unused_BoxIn:
                help: "Box input (Box2di)"
                long: BoxIn
                takes_value: true
            - unused_SzDecoup:
                help: "Size of split for parallel (Pt2di)"
                long: SzDecoup
                takes_value: true
            - unused_InternallCalledByP:
                help: "Internal purpose: dont use (bool)"
                long: InternallCalledByP
                takes_value: true
            - unused_InternalATopo:
                help: "Internal purpose: dont use (bool)"
                long: InternalATopo
                takes_value: true
            - unused_InternallSuplOut:
                help: "Internal purpose: dont use (string)"
                long: InternallSuplOut
                takes_value: true
            - unused_ShowCom:
                help: "Show command, def = false (bool)"
                long: ShowCom
                takes_value: true
            - unused_Debug:
                help: "Debug ... (bool)"
                long: Debug
                takes_value: true
            - unused_TileFile:
                help: "Tile for Big File, def= no tiling for file < 4 Giga Byte (INT)"
                long: TileFile
                takes_value: true
            - unused_Paral:
                help: "Do in parallel, tuning purpose, def=true (bool)"
                long: Paral
                takes_value: true
            - unused_SeuilE:
                help: "Threshold for stretching (def = 5.0) (REAL)"
                long: SeuilE
                takes_value: true
            - unused_SaveImEtrir:
                help: "Save image streching , tuning (def=false) (bool)"
                long: SaveImEtrir
                takes_value: true
    - OldTapas:
        about: "Interface to Apero to compute external and internal orientations"
        args:
            - unused_ExpTxt:
                help: "Export in text format (Def=false) (INT)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "Directory of Output Orientation (string)"
                long: Out
                takes_value: true
            - unused_InCal:
                help: "Directory of Input Internal Orientation (Calibration) (string)"
                long: InCal
                takes_value: true
            - unused_InOri:
                help: "Directory of Input External Orientation (string)"
                long: InOri
                takes_value: true
            - unused_DoC:
                help: "Do Compensation (INT)"
                long: DoC
                takes_value: true
            - unused_ForCalib:
                help: "Is for calibration (Change def value of LMV and prop diag)? (INT)"
                long: ForCalib
                takes_value: true
            - unused_Focs:
                help: "Keep images with focal length inside range [A,B] (A,B in mm) (Def=keep all) (Pt2dr)"
                long: Focs
                takes_value: true
            - unused_VitesseInit:
                help: "  * [Name=VitesseInit] IN (INT)"
                long: VitesseInit
                takes_value: true
            - unused_PPRel:
                help: "Principal point shift (Pt2dr)"
                long: PPRel
                takes_value: true
            - unused_Decentre:
                help: "Principal point is shifted (Def=false) (INT)"
                long: Decentre
                takes_value: true
            - unused_PropDiag:
                help: "Hemi-spherik fisheye diameter to diagonal ratio (REAL)"
                long: PropDiag
                takes_value: true
            - unused_SauvAutom:
                help: "Save intermediary results to (string)"
                long: SauvAutom
                takes_value: true
            - unused_ImInit:
                help: "Force first image (string)"
                long: ImInit
                takes_value: true
            - unused_MOI:
                help: "MOI (bool)"
                long: MOI
                takes_value: true
            - unused_DBF:
                help: "Debug (internal use : DebugPbCondFaisceau=true)  (INT)"
                long: DBF
                takes_value: true
            - unused_Debug:
                help: "Partial file for debug (bool)"
                long: Debug
                takes_value: true
            - unused_DegRadMax:
                help: "Max degree of radial, default model dependent (INT)"
                long: DegRadMax
                takes_value: true
            - unused_LibAff:
                help: "Free affine parameter, Def=true (bool)"
                long: LibAff
                takes_value: true
            - unused_LibDec:
                help: "Free decentric parameter, Def=true (bool)"
                long: LibDec
                takes_value: true
            - unused_LibPP:
                help: "Free principal point, Def=true (bool)"
                long: LibPP
                takes_value: true
            - unused_LibCP:
                help: "Free distortion center, Def=true (bool)"
                long: LibCP
                takes_value: true
            - unused_LibFoc:
                help: "Free focal, Def=true (bool)"
                long: LibFoc
                takes_value: true
            - unused_RapTxt:
                help: "RapTxt (string)"
                long: RapTxt
                takes_value: true
            - unused_LinkPPaPPs:
                help: "Link PPa and PPs (double) (REAL)"
                long: LinkPPaPPs
                takes_value: true
            - unused_FrozenPoses:
                help: "List of frozen poses (pattern) (string)"
                long: FrozenPoses
                takes_value: true
            - unused_SH:
                help: "Set of Hom, Def=||, give MasqFiltered for result of HomolFilterMasq (string)"
                long: SH
                takes_value: true
            - unused_MulLVM:
                help: "Multiplier Levenber Markard (REAL)"
                long: MulLVM
                takes_value: true
    - Ori2Xml:
        about: "Convert historical"
        args:
            - unused_toto:
                help: "todo (string)"
                long: toto
                takes_value: true
    - OriConvert:
        about: "Convert Orientation from Txt 2 XML"
        args:
            - unused_ChSys:
                help: "Change coordinate file (string)"
                long: ChSys
                takes_value: true
            - unused_Calib:
                help: "External XML calibration file (string)"
                long: Calib
                takes_value: true
            - unused_AddCalib:
                help: "Try to add calibration, def=true (bool)"
                long: AddCalib
                takes_value: true
            - unused_ConvOri:
                help: "Orientation convention (like eConvAngPhotoMGrade ...) (string)"
                long: ConvOri
                takes_value: true
            - unused_PrePost:
                help: "[Prefix,Postfix] to generate name of image from id (vector<std::string>)"
                long: PrePost
                takes_value: true
            - unused_KN2I:
                help: "Key 2 compute Name Image from Id in file (string)"
                long: KN2I
                takes_value: true
            - unused_DN:
                help: "Neighbooring distance for Image Graph (REAL)"
                long: DN
                takes_value: true
            - unused_ImC:
                help: "Image |Center| for computing AltiSol (string)"
                long: ImC
                takes_value: true
            - unused_NbImC:
                help: "Number of neighboors around Image |Center| (Def=50) (INT)"
                long: NbImC
                takes_value: true
            - unused_RedSizeSC:
                help: "Reduced Size of image to use for Tapioca for AltiSol (Def=1000) (INT)"
                long: RedSizeSC
                takes_value: true
            - unused_Reexp:
                help: "Reexport as Matrix (internal set up) (string)"
                long: Reexp
                takes_value: true
            - unused_Regul:
                help: "Regularisation cost (Cost of hole), Def=5.0 (REAL)"
                long: Regul
                takes_value: true
            - unused_RegNewBr:
                help: "cost of creating a new branch (Def=0.4, prop to Regul) (REAL)"
                long: RegNewBr
                takes_value: true
            - unused_Reliab:
                help: "Threshold for reliable speed, Def=0.75 (prop to Regul) (REAL)"
                long: Reliab
                takes_value: true
            - unused_CalcV:
                help: "Compute speed (def = false) (bool)"
                long: CalcV
                takes_value: true
            - unused_Delay:
                help: "Delay to take into account after speed estimate (REAL)"
                long: Delay
                takes_value: true
            - unused_TFC:
                help: "Teta from cap : compute orientation from speed) (bool)"
                long: TFC
                takes_value: true
            - unused_RefOri:
                help: "Ref Orientation (internal purpose) (string)"
                long: RefOri
                takes_value: true
            - unused_SiftR:
                help: "Resolution of sift point for Tapioca ,when ImC, (Def No Sift) (INT)"
                long: SiftR
                takes_value: true
            - unused_SiftLR:
                help: "Low Resolution of sift point for MultisCale ,when ImC (Def no multicale) (INT)"
                long: SiftLR
                takes_value: true
            - unused_NameCple:
                help: "Name of XML file to save couples (string)"
                long: NameCple
                takes_value: true
            - unused_Delaunay:
                help: "Add delaunay arc when save couple (Def=true) (bool)"
                long: Delaunay
                takes_value: true
            - unused_DelaunayCross:
                help: "Complete delaunay with some crossing trick arc when save couple (Def=true) (bool)"
                long: DelaunayCross
                takes_value: true
            - unused_Cpt:
                help: "============ [CptMin,CptMax] for tuning purpose ======= (vector<int>)"
                long: Cpt
                takes_value: true
            - unused_UOC:
                help: "Use Only Center (tuning) (bool)"
                long: UOC
                takes_value: true
            - unused_MTD1:
                help: "Compute Metadata only for first image (tuning) (bool)"
                long: MTD1
                takes_value: true
            - unused_Line:
                help: "Nb neighbour in the same line (INT)"
                long: Line
                takes_value: true
            - unused_CBF:
                help: "Export calib as a link to existing file (bool)"
                long: CBF
                takes_value: true
            - unused_AltiSol:
                help: "Average altitude of ground (REAL)"
                long: AltiSol
                takes_value: true
            - unused_Prof:
                help: "Average Prof of images (REAL)"
                long: Prof
                takes_value: true
            - unused_OffsetXY:
                help: "Offset to substract from X,Y (To avoid possible round off error) (Pt2dr)"
                long: OffsetXY
                takes_value: true
            - unused_CalOFC:
                help: "When specified compute initial orientation from centers (in Ori-GenFromC) Ori- (string)"
                long: CalOFC
                takes_value: true
            - unused_OkNoIm:
                help: "Do not create error if image does not exist (def = false) (bool)"
                long: OkNoIm
                takes_value: true
            - unused_SzW:
                help: "Size for visualisation (REAL)"
                long: SzW
                takes_value: true
    - OriExport:
        about: "Export orientation from XML to XML or TXT with specified convention"
        args:
            - unused_AddF:
                help: "Add format as first line of header, def= false (bool)"
                long: AddF
                takes_value: true
            - unused_ModeExp:
                help: "Mode export, def=WPK (Omega Phi Kapa) (string)"
                long: ModeExp
                takes_value: true
            - unused_OnlyCenters:
                help: "Export only camera centers, def=false (bool)"
                long: OnlyCenters
                takes_value: true
            - unused_OnlyAngles:
                help: "Export only camera angles, def=false (bool)"
                long: OnlyAngles
                takes_value: true
    - OriRedTieP:
        about: "Tie points filtering, using Martini results"
        args:
            - unused_OriCalib:
                help: "Calibration folder if any (string)"
                long: OriCalib
                takes_value: true
            - unused_Prec2P:
                help: "Threshold of precision for 2 Points (REAL)"
                long: Prec2P
                takes_value: true
            - unused_KBox:
                help: "Internal use (INT)"
                long: KBox
                takes_value: true
            - unused_SzTile:
                help: "Size of Tiles in Pixel Def=2000 (INT)"
                long: SzTile
                takes_value: true
            - unused_DistPMul:
                help: "Typical dist between pmult Def=200.000000 (REAL)"
                long: DistPMul
                takes_value: true
            - unused_MVG:
                help: "Multiplier VonGruber, Def=1.500000 (REAL)"
                long: MVG
                takes_value: true
            - unused_Paral:
                help: "Do it paral, def=true (bool)"
                long: Paral
                takes_value: true
            - unused_VerifNM:
                help: "(Internal) Verification of Virtual Name Manager (bool)"
                long: VerifNM
                takes_value: true
            - unused_FromRG:
                help: "(Internal) called by ratagia at top level (bool)"
                long: FromRG
                takes_value: true
            - unused_FromRB:
                help: "(Internal) called by ratagia at box level (bool)"
                long: FromRB
                takes_value: true
            - unused_LevelOr:
                help: "(Internal when call by ratafia) level of orientation (INT)"
                long: LevelOr
                takes_value: true
            - unused_Debug:
                help: "Debug, tunging purpose (bool)"
                long: Debug
                takes_value: true
            - unused_DCA:
                help: "Do Complete Arc (Def=ModeIm) (bool)"
                long: DCA
                takes_value: true
            - unused_UseP:
                help: "Use precdente point to avoir redondance, Def=true, only for tuning (bool)"
                long: UseP
                takes_value: true
    - PanelIm:
        about: "Tool for creating a panel of images"
        args:
            - unused_Border:
                help: "Border between images (INT)"
                long: Border
                takes_value: true
            - unused_NbL:
                help: "Number of line (def to have NbLine=NbCol) (INT)"
                long: NbL
                takes_value: true
            - unused_Res:
                help: "Result, default Panel.tif (string)"
                long: Res
                takes_value: true
            - unused_Scale:
                help: "Scale of Image, def=10  (REAL)"
                long: Scale
                takes_value: true
            - unused_Fond:
                help: "Background colour (vector<int>)"
                long: Fond
                takes_value: true
            - unused_Gray:
                help: "Force result to gray image (INT)"
                long: Gray
                takes_value: true
    - Pasta:
        about: "Compute external calibration and radial basic internal calibration"
        args:
            - unused_ExpTxt:
                help: "  * [Name=ExpTxt] IN (INT)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
    - PastDevlop:
        about: "Do some stuff"
        args:
            - unused_Sz1:
                help: "  * [Name=Sz1] IN (INT)"
                long: Sz1
                takes_value: true
            - unused_Sz2:
                help: "  * [Name=Sz2] IN (INT)"
                long: Sz2
                takes_value: true
            - unused_Coul8B:
                help: "  * [Name=Coul8B] boo (bool)"
                long: Coul8B
                takes_value: true
    - Pastis:
        about: "Tie points detection"
        args:
            - unused_Exe:
                help: "  * [Name=Exe] IN (INT)"
                long: Exe
                takes_value: true
            - unused_IC:
                help: "  * [Name=IC] strin (string)"
                long: IC
                takes_value: true
            - unused_Purge:
                help: "  * [Name=Purge] IN (INT)"
                long: Purge
                takes_value: true
            - unused_Add:
                help: "  * [Name=Add] strin (string)"
                long: Add
                takes_value: true
            - unused_Rev:
                help: "  * [Name=Rev] IN (INT)"
                long: Rev
                takes_value: true
            - unused_DOIDE:
                help: "  * [Name=DOIDE] IN (INT)"
                long: DOIDE
                takes_value: true
            - unused_MkF:
                help: "  * [Name=MkF] strin (string)"
                long: MkF
                takes_value: true
            - unused_MkAdd:
                help: "  * [Name=MkAdd] boo (bool)"
                long: MkAdd
                takes_value: true
            - unused_IsRelancedByThis:
                help: "  * [Name=IsRelancedByThis] IN (INT)"
                long: IsRelancedByThis
                takes_value: true
    - PatFromOri:
        about: "Get pattern of images from Ori folder"
        args:
            - unused_Show:
                help: "Display Pattern to use in cmd line ; Def=false (bool)"
                long: Show
                takes_value: true
    - PHO_MI:
        about: "Filter homologue points from initial orientation to reduce number of observations"
        args:
            - unused_HomolIn:
                help: "Name of input Homol foler, Homol par default (string)"
                long: HomolIn
                takes_value: true
            - unused_ExpTxt:
                help: "Ascii format for in and out, def=false (bool)"
                long: ExpTxt
                takes_value: true
            - unused_HomolOut:
                help: "Output corrected Homologues folder (string)"
                long: HomolOut
                takes_value: true
            - unused_Strategie:
                help: "Strategie de filtre les points homols (string)"
                long: Strategie
                takes_value: true
            - unused_Dist:
                help: "Distant to verify reprojection point (REAL)"
                long: Dist
                takes_value: true
            - unused_DistHom:
                help: "Distant to verify triplet (REAL)"
                long: DistHom
                takes_value: true
            - unused_PropDiag:
                help: "For fisheye lens (REAL)"
                long: PropDiag
                takes_value: true
            - unused_CorelThres:
                help: "Threshold for corellation value  [-1 1] (REAL)"
                long: CorelThres
                takes_value: true
            - unused_SizeVignette:
                help: "Size of Corellation Vignette [default = 5] (REAL)"
                long: SizeVignette
                takes_value: true
            - unused_DispVignette:
                help: "Display imagette before do corellation [defalut=false] (bool)"
                long: DispVignette
                takes_value: true
            - unused_By1Img:
                help: "Decide result is good if it's good in 1 of collection 3eme image [defalut=true] (bool)"
                long: By1Img
                takes_value: true
            - unused_TauxGood:
                help: "Decide result is good if it's good in TauxGood% of collection 3eme image [defalut=0.5] (REAL)"
                long: TauxGood
                takes_value: true
            - unused_Autour:
                help: "Search autour for better decide correlation [default= 0 pixels] (REAL)"
                long: Autour
                takes_value: true
    - PIMs:
        about: "Per Image Matchings"
        args:
            - unused_Masq3D:
                help: "3D masq for point selection (string)"
                long: Masq3D
                takes_value: true
            - unused_Tuning:
                help: "Will disappear one day ... (bool)"
                long: Tuning
                takes_value: true
            - unused_Purge:
                help: "Purge result, (Def=true) (bool)"
                long: Purge
                takes_value: true
            - unused_ZoomF:
                help: "Zoom final, Def depends on mode (INT)"
                long: ZoomF
                takes_value: true
            - unused_UseGpu:
                help: "Use cuda (Def=false) (bool)"
                long: UseGpu
                takes_value: true
            - unused_DefCor:
                help: "Def correlation, context depend (REAL)"
                long: DefCor
                takes_value: true
            - unused_ZReg:
                help: "Regularisation, context depend (REAL)"
                long: ZReg
                takes_value: true
            - unused_ExpTxt:
                help: "Use txt tie points for determining image pairs (bool)"
                long: ExpTxt
                takes_value: true
            - unused_FilePair:
                help: "Explicit pairs of images (as in Tapioca) (string)"
                long: FilePair
                takes_value: true
            - unused_DebugMMByP:
                help: "Debug MMByPair ... (bool)"
                long: DebugMMByP
                takes_value: true
            - unused_ExpImSec:
                help: "Export Images Secondair, def=true (bool)"
                long: ExpImSec
                takes_value: true
            - unused_OffsetPly:
                help: "Ply offset to overcome 32 bits problem (Pt3dr)"
                long: OffsetPly
                takes_value: true
            - unused_SzW:
                help: "Correlation Window Size (Def=1 means 3x3) (INT)"
                long: SzW
                takes_value: true
    - PIMs2Mnt:
        about: "Generate Mnt from Per Image Matchings"
        args:
            - unused_DS:
                help: "Downscale, Def=1.0 (REAL)"
                long: DS
                takes_value: true
            - unused_ZReg:
                help: "Regularisation, context depend (REAL)"
                long: ZReg
                takes_value: true
            - unused_Repere:
                help: "Repair (Euclid or Cyl) (string)"
                long: Repere
                takes_value: true
            - unused_Pat:
                help: "Pattern, def = all existing clouds (string)"
                long: Pat
                takes_value: true
            - unused_DoMnt:
                help: " Compute DTM , def=true (use false to return only ortho) (bool)"
                long: DoMnt
                takes_value: true
            - unused_DoOrtho:
                help: "Generate ortho photo,  def=false (bool)"
                long: DoOrtho
                takes_value: true
            - unused_MasqImGlob:
                help: "Global Masq for ortho: if used, give full name of masq (e.g. MasqGlob.tif)  (string)"
                long: MasqImGlob
                takes_value: true
            - unused_Debug:
                help: "Debug !!! (bool)"
                long: Debug
                takes_value: true
            - unused_UseTA:
                help: "Use TA as filter when exist (Def=false) (bool)"
                long: UseTA
                takes_value: true
            - unused_RI:
                help: "Resol Im, def=1  (REAL)"
                long: RI
                takes_value: true
            - unused_SeuilE:
                help: "Seuil d'etirement des triangle, Def=5 (REAL)"
                long: SeuilE
                takes_value: true
    - PIMs2Ply:
        about: "Generate Ply from Per Image Matchings"
        args:
            - unused_DS:
                help: "Dowscale, Def=1.0 (REAL)"
                long: DS
                takes_value: true
            - unused_Out:
                help: "Ply File Results (string)"
                long: Out
                takes_value: true
            - unused_Pat:
                help: "Pattern for selecting images (Def=All image in files) (string)"
                long: Pat
                takes_value: true
            - unused_OffsetPly:
                help: "Ply offset to overcome 32 bits problem (Pt3dr)"
                long: OffsetPly
                takes_value: true
    - PointeInitPolyg:
        about: "Do some stuff"
    - Porto:
        about: "Generates a global ortho-photo"
    - Prep4masq:
        about: "Generates files for making Masks (if SaisieMasq unavailable)"
    - Ratafia:
        about: "Some stuff to be described later"
        args:
            - unused_OriCalib:
                help: "Calibration folder if any (string)"
                long: OriCalib
                takes_value: true
            - unused_LevelOR:
                help: "Level Or, 0=None,1=Pair,2=Glob, (Def=1) (INT)"
                long: LevelOR
                takes_value: true
            - unused_NbP:
                help: "Nb Process, def use all (INT)"
                long: NbP
                takes_value: true
            - unused_RecMax:
                help: "Max overlap acceptable in two parallely processed images (REAL)"
                long: RecMax
                takes_value: true
            - unused_ShowP:
                help: "Show Partition (def=false) (bool)"
                long: ShowP
                takes_value: true
            - unused_SzPixDec:
                help: "Sz of decoupe in pixel (REAL)"
                long: SzPixDec
                takes_value: true
            - unused_TEO:
                help: "Test Execution OriRedTieP () (bool)"
                long: TEO
                takes_value: true
            - unused_Out:
                help: "Folder dest => Def=-Ratafia (string)"
                long: Out
                takes_value: true
            - unused_DistPMul:
                help: "Average dist (REAL)"
                long: DistPMul
                takes_value: true
            - unused_MVG:
                help: "Multiplier VonGruber, Def=2.000000 (REAL)"
                long: MVG
                takes_value: true
            - unused_Paral:
                help: "Do it in parallel (bool)"
                long: Paral
                takes_value: true
            - unused_DCA:
                help: "Do Complete Arc (Def=false) (bool)"
                long: DCA
                takes_value: true
            - unused_UseP:
                help: "Use prec to avoid redundancy (Def=true), tuning only (bool)"
                long: UseP
                takes_value: true
            - unused_ProbaSel:
                help: "tuning only, generate a random selection at the end (REAL)"
                long: ProbaSel
                takes_value: true
    - RechCibleDRad:
        about: "Do some stuff"
    - RechCibleInit:
        about: "Do some stuff"
    - RedTieP:
        about: "Test tie points filtering"
        args:
            - unused_NumPointsX:
                help: "Target number of tie-points between 2 images in x axis of image space, def=12 (INT)"
                long: NumPointsX
                takes_value: true
            - unused_NumPointsY:
                help: "Target number of tie-points between 2 images in y axis of image space, def=12 (INT)"
                long: NumPointsY
                takes_value: true
            - unused_Adaptive:
                help: "Use adaptive grids, def=false (bool)"
                long: Adaptive
                takes_value: true
            - unused_SubcommandIndex:
                help: "Internal use (INT)"
                long: SubcommandIndex
                takes_value: true
            - unused_ExpSubCom:
                help: "Export the subcommands instead of executing them, def=false (bool)"
                long: ExpSubCom
                takes_value: true
            - unused_ExpTxt:
                help: "Export homol point in Ascii, def=false (bool)"
                long: ExpTxt
                takes_value: true
            - unused_SortByNum:
                help: "Sort images by number of tie-points, determining the order in which the subcommands are executed, def=0 (sort by file name) (bool)"
                long: SortByNum
                takes_value: true
            - unused_Desc:
                help: "Use descending order in the sorting of images, def=0 (ascending) (bool)"
                long: Desc
                takes_value: true
            - unused_WeightAccGain:
                help: "Weight of median accuracy with respect to multiplicity (NumPairs) when computing Gain of multi-tie-point, i.e. K in formula Gain=NumPairs*(1/1 + (K*Acc/AccMed)^2) (if K=0 then Gain is NumPairs), def=0.5 (REAL)"
                long: WeightAccGain
                takes_value: true
            - unused_MinNumHomol:
                help: "Minimum number of tie-points for an image pair not to be excluded, def=20 (INT)"
                long: MinNumHomol
                takes_value: true
    - Reduc2MM:
        about: "Do some stuff"
    - ReducHom:
        about: "Do some stuff"
        args:
            - unused_ImpTxt:
                help: "Import in text format(def=false) (bool)"
                long: ImpTxt
                takes_value: true
            - unused_ExpTxt:
                help: "Export in text format(def=false) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ExtH:
                help: "Extension for homol, like SrRes, def=||) (string)"
                long: ExtH
                takes_value: true
            - unused_NbMinHom:
                help: "Nb Min Pts For Homography Computation def=20 (INT)"
                long: NbMinHom
                takes_value: true
            - unused_SeuilQual:
                help: "Quality Theshold for homography (Def=20.0) (REAL)"
                long: SeuilQual
                takes_value: true
            - unused_RatioQualMoy:
                help: "Ratio to validate / average qual (def=4.0) (REAL)"
                long: RatioQualMoy
                takes_value: true
    - RepLocBascule:
        about: "Tool to define a local repair without changing the orientation"
        args:
            - unused_ExpTxt:
                help: "Are tie points in ascii mode ? (Def=false) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_PostPlan:
                help: "Postfix for plane name, (Def=_Masq) (string)"
                long: PostPlan
                takes_value: true
            - unused_OrthoCyl:
                help: "Is the coordinate system in ortho-cylindric mode? (bool)"
                long: OrthoCyl
                takes_value: true
    - ReprojImg:
        about: "Reproject an image into geometry of another"
        args:
            - unused_AutoMask:
                help: "AutoMask filename (string)"
                long: AutoMask
                takes_value: true
            - unused_DepthRepImage:
                help: "Image to reproject DEM file (xml), def=not used (string)"
                long: DepthRepImage
                takes_value: true
            - unused_KeepGreen:
                help: "Keep original picture green (only for colorization), def=false (bool)"
                long: KeepGreen
                takes_value: true
            - unused_LutSqrt:
                help: "Use LUT sqrt (only for colorization), def=false (bool)"
                long: LutSqrt
                takes_value: true
            - unused_Out:
                help: "Output image name (tif), def=Reproj.tif (string)"
                long: Out
                takes_value: true
            - unused_CoulourImgScale:
                help: "CoulourImgScale (int, if color image is bigger than ori to reproject), def=1 (INT)"
                long: CoulourImgScale
                takes_value: true
    - ReSampFid:
        about: "Resampling using one fiducial mark"
        args:
            - unused_BoxCh:
                help: "Box in Chambre (generally in mm) (Box2dr)"
                long: BoxCh
                takes_value: true
            - unused_Kern:
                help: "Kernel of interpol,0 Bilin, 1 Bicub, other SinC (fix size of apodisation window), Def=5 (INT)"
                long: Kern
                takes_value: true
            - unused_AttrMasq:
                help: "Atribut for masq toto-> toto_AttrMasq.tif, NONE if unused, Def=NONE (string)"
                long: AttrMasq
                takes_value: true
    - SaisieAppuisInit:
        about: "Interactive tool for initial capture of GCP"
        args:
            - unused_SzW:
                help: "Sz of window (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Nb of sub window (Def depends of number of images with max of 2x2) (Pt2di)"
                long: NbF
                takes_value: true
            - unused_NameAuto:
                help: " Prefix for automatic point creation (string)"
                long: NameAuto
                takes_value: true
            - unused_Pref2Add:
                help: " Prefix to add during import (for bug correction ?) (string)"
                long: Pref2Add
                takes_value: true
            - unused_ForceGray:
                help: " Force gray image, def =true (bool)"
                long: ForceGray
                takes_value: true
            - unused_OriMode:
                help: "Orientation type (GRID) (Def=Std) (string)"
                long: OriMode
                takes_value: true
            - unused_ZMoy:
                help: "Average Z, Mandatory in PB (REAL)"
                long: ZMoy
                takes_value: true
            - unused_ZInc:
                help: "Incertitude on Z, Mandatory in PB (REAL)"
                long: ZInc
                takes_value: true
            - unused_InputSec:
                help: "PIMs filter used for visibility (string)"
                long: InputSec
                takes_value: true
    - SaisieAppuisInitQT:
        about: "Interactive tool for initial capture of GCP"
        args:
            - unused_SzW:
                help: "Sz of window (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Nb of sub window (Pt2di)"
                long: NbF
                takes_value: true
            - unused_NameAuto:
                help: "Prefix for automatic point creation (string)"
                long: NameAuto
                takes_value: true
            - unused_ForceGray:
                help: "Force gray image, def=false (bool)"
                long: ForceGray
                takes_value: true
            - unused_OriMode:
                help: "Orientation type (GRID) (Def=Std) (string)"
                long: OriMode
                takes_value: true
            - unused_ZMoy:
                help: "Average Z, Mandatory in PB (REAL)"
                long: ZMoy
                takes_value: true
            - unused_ZInc:
                help: "Incertitude on Z, Mandatory in PB (REAL)"
                long: ZInc
                takes_value: true
    - SaisieAppuisPredic:
        about: "Interactive tool for assisted capture of GCP"
        args:
            - unused_SzW:
                help: "Size of global window (Def 800 800) (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Number of Sub Window (Def 2 2) (Pt2di)"
                long: NbF
                takes_value: true
            - unused_WBlur:
                help: "Size IN GROUND GEOMETRY of bluring for target (REAL)"
                long: WBlur
                takes_value: true
            - unused_Type:
                help: "in [MaxLoc,MinLoc,GeoCube] (string)"
                long: Type
                takes_value: true
            - unused_ForceGray:
                help: "Force gray image, def=true (bool)"
                long: ForceGray
                takes_value: true
            - unused_OriMode:
                help: "Orientation type (GRID) (Def=Std) (string)"
                long: OriMode
                takes_value: true
            - unused_ZMoy:
                help: "Average Z, Mandatory in PB (REAL)"
                long: ZMoy
                takes_value: true
            - unused_ZInc:
                help: "Incertitude on Z, Mandatory in PB (REAL)"
                long: ZInc
                takes_value: true
            - unused_Masq3D:
                help: "3D Masq used for visibility (string)"
                long: Masq3D
                takes_value: true
            - unused_PIMsF:
                help: "PIMs filter used for visibility (string)"
                long: PIMsF
                takes_value: true
            - unused_InputSec:
                help: "For inmporting Other Inputs (string)"
                long: InputSec
                takes_value: true
    - SaisieAppuisPredicQT:
        about: "Interactive tool for assisted capture of GCP"
        args:
            - unused_SzW:
                help: "Sz of window (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Nb of sub window (Pt2di)"
                long: NbF
                takes_value: true
            - unused_WBlur:
                help: "Size IN GROUND GEOMETRY of bluring for target (REAL)"
                long: WBlur
                takes_value: true
            - unused_Type:
                help: "in [MaxLoc,MinLoc,GeoCube] (string)"
                long: Type
                takes_value: true
            - unused_ForceGray:
                help: "Force gray image, def=false (bool)"
                long: ForceGray
                takes_value: true
    - SaisieBasc:
        about: "Interactive tool to capture information on the scene"
        args:
            - unused_SzW:
                help: "Total size of windows (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Number of Windows (def depend of number of images (Pt2di)"
                long: NbF
                takes_value: true
            - unused_ForceGray:
                help: " Force gray image, def =true (bool)"
                long: ForceGray
                takes_value: true
    - SaisieBascQT:
        about: "Interactive tool to capture information on the scene"
        args:
            - unused_SzW:
                help: "Total size of windows (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Number of Windows (def depend of number of images (Pt2di)"
                long: NbF
                takes_value: true
            - unused_ForceGray:
                help: " Force gray image, def =true (bool)"
                long: ForceGray
                takes_value: true
    - SaisieBoxQT:
        about: "Interactive tool to capture 2D box"
        args:
            - unused_SzW:
                help: "* [Name=SzW] integer	: set window width (default=800 (integer	:)"
                long: SzW
                takes_value: true
            - unused_Post:
                help: "* [Name=Post] string	: change postfix output file (default=_Masq (string	:)"
                long: Post
                takes_value: true
            - unused_Name:
                help: "* [Name=Name] string	: set output filename (default=input+_Masq (string	:)"
                long: Name
                takes_value: true
            - unused_Gama:
                help: "* [Name=Gama] REAL	: apply gamma to imag (REAL	:)"
                long: Gama
                takes_value: true
    - SaisieCyl:
        about: "Interactive tool to capture information on the scene for cylinders"
        args:
            - unused_SzW:
                help: "Total size of windows (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Number of Windows (def depend of number of images (Pt2di)"
                long: NbF
                takes_value: true
            - unused_ForceGray:
                help: " Force gray image, def =true (bool)"
                long: ForceGray
                takes_value: true
    - SaisieCylQT:
        about: "Interactive tool to capture information on the scene for cylinders"
        args:
            - unused_SzW:
                help: "Total size of windows (Pt2di)"
                long: SzW
                takes_value: true
            - unused_NbF:
                help: "Number of Windows (def depend of number of images (Pt2di)"
                long: NbF
                takes_value: true
            - unused_ForceGray:
                help: " Force gray image, def =true (bool)"
                long: ForceGray
                takes_value: true
    - SaisieMasq:
        about: "Interactive tool to capture masq"
        args:
            - unused_SzW:
                help: "  * [Name=SzW] Pt2d (Pt2di)"
                long: SzW
                takes_value: true
            - unused_Post:
                help: "  * [Name=Post] strin (string)"
                long: Post
                takes_value: true
            - unused_Name:
                help: "Name of result, default toto->toto_Masq.tif (string)"
                long: Name
                takes_value: true
            - unused_Gama:
                help: "  * [Name=Gama] REA (REAL)"
                long: Gama
                takes_value: true
            - unused_Attr:
                help: "  * [Name=Attr] strin (string)"
                long: Attr
                takes_value: true
    - SaisieMasqQT:
        about: "Interactive tool to capture masq"
        args:
            - unused_SzW:
                help: "* [Name=SzW] Pt2di	: set window size (default=[900,700] (Pt2di	:)"
                long: SzW
                takes_value: true
            - unused_Post:
                help: "* [Name=Post] string	: change postfix output file (default=_Masq (string	:)"
                long: Post
                takes_value: true
            - unused_Name:
                help: "* [Name=Name] string	: set output filename (default=input+_Masq (string	:)"
                long: Name
                takes_value: true
            - unused_Gama:
                help: "* [Name=Gama] REAL	: apply gamma to imag (REAL	:)"
                long: Gama
                takes_value: true
            - unused_Attr:
                help: "* [Name=Attr] string	: string to add to postfi (string	:)"
                long: Attr
                takes_value: true
    - SaisiePts:
        about: "Tool to capture GCP (low level, not recommended)"
    - Sake:
        about: "Simplified MicMac interface for satellite images"
        args:
            - unused_ZMoy:
                help: "Average value of Z (Def=1000.0) (REAL)"
                long: ZMoy
                takes_value: true
            - unused_ZInc:
                help: "Initial uncertainty on Z (Def=1000.0) (REAL)"
                long: ZInc
                takes_value: true
            - unused_ModeOri:
                help: "Orientation type (GRID or RTO; Def=GRID) (string)"
                long: ModeOri
                takes_value: true
            - unused_Mask:
                help: "Mask file (string)"
                long: Mask
                takes_value: true
            - unused_SzW:
                help: "Correlation window size (Def=2, equiv 5x5) (INT)"
                long: SzW
                takes_value: true
            - unused_DefCor:
                help: "Default Correlation in un correlated pixels (Def=0.2)  (REAL)"
                long: DefCor
                takes_value: true
            - unused_ZRegul:
                help: "Regularization factor (Def=0.2 (REAL)"
                long: ZRegul
                takes_value: true
            - unused_ZPas:
                help: "Quantification step (Def=0.5) (REAL)"
                long: ZPas
                takes_value: true
            - unused_ZoomF:
                help: "Final zoom (Def=1) (INT)"
                long: ZoomF
                takes_value: true
            - unused_BoxClip:
                help: "Define computation area (Def=[0,0,1,1] means full area) relative to image (Box2dr)"
                long: BoxClip
                takes_value: true
            - unused_BoxTer:
                help: "Define computation area [Xmin,Ymin,Xmax,Ymax] relative to ground (Box2dr)"
                long: BoxTer
                takes_value: true
            - unused_ResolTerrain:
                help: "Ground Resol (Def automatically computed) (REAL)"
                long: ResolTerrain
                takes_value: true
            - unused_EZA:
                help: "Export absolute values for Z (Def=true) (bool)"
                long: EZA
                takes_value: true
            - unused_DirMEC:
                help: "Results subdirectory (Def=MEC-Sake/) (string)"
                long: DirMEC
                takes_value: true
            - unused_DirOrtho:
                help: "Orthos subdirectory if OrthoIm (Def=Ortho- (string)"
                long: DirOrtho
                takes_value: true
            - unused_DoOrthoM:
                help: "Compute the ortho mosaic if OrthoIm (Def=false) (bool)"
                long: DoOrthoM
                takes_value: true
            - unused_NbProc:
                help: "Number of cores used for computation (Def=MMNbProc) (INT)"
                long: NbProc
                takes_value: true
            - unused_Exe:
                help: "Execute command (Def=true) (bool)"
                long: Exe
                takes_value: true
    - SateLib:
        about: "Library of satellite images meta-data handling - early work in progress!"
    - SBGlobBascule:
        about: "Tool for scene based global bascule"
        args:
            - unused_ExpTxt:
                help: "  * [Name=ExpTxt] boo (bool)"
                long: ExpTxt
                takes_value: true
            - unused_PostPlan:
                help: "Set NONE if no plane (string)"
                long: PostPlan
                takes_value: true
            - unused_DistFS:
                help: "Distance between Ech1 and Ech2 to fix scale (if not given no scaling) (REAL)"
                long: DistFS
                takes_value: true
            - unused_Rep:
                help: "Target coordinate system (Def = ki, ie normal is vertical) (string)"
                long: Rep
                takes_value: true
            - unused_CPI:
                help: "Calibration Per Image (Def=false) (bool)"
                long: CPI
                takes_value: true
    - ScaleIm:
        about: "Tool for image scaling"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_YScale:
                help: "  * [Name=YScale] REA (REAL)"
                long: YScale
                takes_value: true
            - unused_Sz:
                help: "  * [Name=Sz] Pt2d (Pt2dr)"
                long: Sz
                takes_value: true
            - unused_P0:
                help: "  * [Name=P0] Pt2d (Pt2dr)"
                long: P0
                takes_value: true
            - unused_Type:
                help: "Type (u_int1, int1, u_int2, int2, int4, real4, real8) (string)"
                long: Type
                takes_value: true
            - unused_Mult:
                help: "  * [Name=Mult] REA (REAL)"
                long: Mult
                takes_value: true
            - unused_Dilate:
                help: "  * [Name=Dilate] REA (REAL)"
                long: Dilate
                takes_value: true
            - unused_DilXY:
                help: "  * [Name=DilXY] Pt2d (Pt2dr)"
                long: DilXY
                takes_value: true
            - unused_Debug:
                help: "Debug (INT)"
                long: Debug
                takes_value: true
            - unused_Offset:
                help: "  * [Name=Offset] REA (REAL)"
                long: Offset
                takes_value: true
            - unused_Tile:
                help: "  * [Name=Tile] IN (INT)"
                long: Tile
                takes_value: true
            - unused_FG:
                help: "Force gray (Def=false) (bool)"
                long: FG
                takes_value: true
            - unused_F8B:
                help: "Force 8 bits (Def=false) (bool)"
                long: F8B
                takes_value: true
            - unused_ModMasq:
                help: "Mode Masq => binarize at 0.9999 threshlod  (bool)"
                long: ModMasq
                takes_value: true
    - ScaleNuage:
        about: "Tool for scaling internal representation of point cloud"
        args:
            - unused_Sz:
                help: "  * [Name=Sz] Pt2d (Pt2dr)"
                long: Sz
                takes_value: true
            - unused_P0:
                help: "  * [Name=P0] Pt2d (Pt2dr)"
                long: P0
                takes_value: true
            - unused_Old:
                help: "For full compatibility, def=false (bool)"
                long: Old
                takes_value: true
            - unused_InDirLoc:
                help: "Add input directory to output , def=true (bool)"
                long: InDirLoc
                takes_value: true
    - Schnaps:
        about: "Reduction of homologue points in image geometry"
        args:
            - unused_HomolIn:
                help: "Input Homol directory suffix (without |Homol|) (string)"
                long: HomolIn
                takes_value: true
            - unused_NbWin:
                help: "Minimal homol points in each picture (default: 1000) (INT)"
                long: NbWin
                takes_value: true
            - unused_ExeWrite:
                help: "Execute write output homol dir, def=true (bool)"
                long: ExeWrite
                takes_value: true
            - unused_HomolOut:
                help: "Output Homol directory suffix (default: _mini) (string)"
                long: HomolOut
                takes_value: true
            - unused_ExpTxt:
                help: "Ascii format for in and out, def=false (bool)"
                long: ExpTxt
                takes_value: true
            - unused_VeryStrict:
                help: "Be very strict with homols (remove any suspect), def=false (bool)"
                long: VeryStrict
                takes_value: true
            - unused_ShowStats:
                help: "Show Homol points stats before and after filtering, def=false (bool)"
                long: ShowStats
                takes_value: true
            - unused_PoubelleName:
                help: "Where to write suspicious pictures names, def=|Schnaps_poubelle.txt| (string)"
                long: PoubelleName
                takes_value: true
            - unused_minPercentCoverage:
                help: "Minimum % of coverage to avoid adding to poubelle, def=30 (REAL)"
                long: minPercentCoverage
                takes_value: true
    - ScriptCalib:
        about: "Do some stuff"
    - SEL:
        about: "Tool to visualize tie points"
        args:
            - unused_R:
                help: "  * [Name=R] IN (INT)"
                long: R
                takes_value: true
            - unused_RL1:
                help: "Estimate Homography using L1 mode (bool)"
                long: RL1
                takes_value: true
            - unused_F:
                help: "  * [Name=F] strin (string)"
                long: F
                takes_value: true
            - unused_KH:
                help: "In P PB PBR M S NB NT MMD (string)"
                long: KH
                takes_value: true
            - unused_KCpl:
                help: "  * [Name=KCpl] strin (string)"
                long: KCpl
                takes_value: true
            - unused_SzW:
                help: "  * [Name=SzW] Pt2d (Pt2di)"
                long: SzW
                takes_value: true
            - unused_ModeEpip:
                help: "If mode epip, the y displacement are forced to 0 (bool)"
                long: ModeEpip
                takes_value: true
            - unused_SH:
                help: "Homologue extenion for NB/NT mode (string)"
                long: SH
                takes_value: true
    - SetExif:
        about: "Modification of exif file (requires exiv2)"
        args:
            - unused_F:
                help: "Focal lenght (REAL)"
                long: F
                takes_value: true
            - unused_F35:
                help: "Focal lenght equiv 35mm (REAL)"
                long: F35
                takes_value: true
            - unused_Cam:
                help: "Camera model (string)"
                long: Cam
                takes_value: true
            - unused_Purge:
                help: "Purge created exiv2 command file (Def=true) (bool)"
                long: Purge
                takes_value: true
    - SetGpsExif:
        about: "Add GPS infos in images exif meta-data (requires exiv2)"
        args:
            - unused_GpsVId:
                help: "GPS Version ID ; Def=2.2.0.0 (string)"
                long: GpsVId
                takes_value: true
            - unused_LatRef:
                help: "GPS Latitude Ref (string)"
                long: LatRef
                takes_value: true
            - unused_LonRef:
                help: "GPS Longitude Ref (string)"
                long: LonRef
                takes_value: true
            - unused_AltRef:
                help: "GPS Altitude Ref ; Def=0 Above Sea Level (1=Below) (bool)"
                long: AltRef
                takes_value: true
            - unused_TimeStamp:
                help: "GPS Time Stamp ; (In Dev) (string)"
                long: TimeStamp
                takes_value: true
            - unused_Purge:
                help: "Purge .xml & .dmp created files in Tmp-MM-Dir (bool)"
                long: Purge
                takes_value: true
    - Sift:
        about: "Tool for extracting points of interest using"
    - SimplePredict:
        about: "Project ground points on oriented cameras"
        args:
            - unused_ExportPolyIGN:
                help: "Export PointeInitIm files for IGN Polygon calibration method (Def=false) (bool)"
                long: ExportPolyIGN
                takes_value: true
            - unused_PrefixeNomImageSize:
                help: "Size of PrefixeNomImage in param.txt (INT)"
                long: PrefixeNomImageSize
                takes_value: true
    - SMDM:
        about: "Simplified Merging of individual, stackable, depth maps"
        args:
            - unused_TargetGeom:
                help: "Name of Targeted geometry, Def computed by agregation of input (string)"
                long: TargetGeom
                takes_value: true
            - unused_Out:
                help: "Result, Def=Fusion.xml (string)"
                long: Out
                takes_value: true
    - SplitMPO:
        about: "tool to develop MPO stereo format in pair of images"
        args:
            - unused_Right:
                help: "Right extension, def=_R (string)"
                long: Right
                takes_value: true
            - unused_Left:
                help: "Left extension, def=_L (string)"
                long: Left
                takes_value: true
            - unused_TG:
                help: "Tiff gray, def=false (bool)"
                long: TG
                takes_value: true
    - StackFlatField:
        about: "Basic Flat Field estimation by image stacking"
        args:
            - unused_NbMed:
                help: "  * [Name=NbMed] IN (INT)"
                long: NbMed
                takes_value: true
            - unused_Out:
                help: "Name of result (string)"
                long: Out
                takes_value: true
            - unused_SousResAdd:
                help: "  * [Name=SousResAdd] REA (REAL)"
                long: SousResAdd
                takes_value: true
            - unused_NbMedSsRes:
                help: "  * [Name=NbMedSsRes] IN (INT)"
                long: NbMedSsRes
                takes_value: true
            - unused_TolMed:
                help: "  * [Name=TolMed] REA (REAL)"
                long: TolMed
                takes_value: true
            - unused_ByMoy:
                help: "Average or median (def=false (bool)"
                long: ByMoy
                takes_value: true
    - StatIm:
        about: "Tool for basic stat on an image"
        args:
            - unused_Sz:
                help: "Size of rectangle (Def=[1,1]) (Pt2di)"
                long: Sz
                takes_value: true
    - SupMntIm:
        about: "Tool for superposition of Mnt Im & level curve"
        args:
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_DynGray:
                help: "  * [Name=DynGray] REA (REAL)"
                long: DynGray
                takes_value: true
            - unused_OffsetGray:
                help: "  * [Name=OffsetGray] REA (REAL)"
                long: OffsetGray
                takes_value: true
            - unused_GamaGray:
                help: "  * [Name=GamaGray] REA (REAL)"
                long: GamaGray
                takes_value: true
            - unused_DynCoul:
                help: "Colour dynamic (REAL)"
                long: DynCoul
                takes_value: true
            - unused_NoVal:
                help: "  * [Name=NoVal] IN (INT)"
                long: NoVal
                takes_value: true
            - unused_Sat:
                help: "  * [Name=Sat] REA (REAL)"
                long: Sat
                takes_value: true
            - unused_ShowSat:
                help: "  * [Name=ShowSat] IN (INT)"
                long: ShowSat
                takes_value: true
            - unused_Grad:
                help: "  * [Name=Grad] IN (INT)"
                long: Grad
                takes_value: true
            - unused_CDN:
                help: "Generate level curve? (REAL)"
                long: CDN
                takes_value: true
            - unused_CoulCDN:
                help: "Interval between level curves (Pt3dr)"
                long: CoulCDN
                takes_value: true
            - unused_Masq:
                help: "Masq of images (string)"
                long: Masq
                takes_value: true
    - SysCoordPolyn:
        about: "Tool for creating a polynomial coordinate system from a set of known pair of coordinate"
        args:
            - unused_Test:
                help: "  * [Name=Test] strin (string)"
                long: Test
                takes_value: true
    - Tapas:
        about: "NEW version !! Compatible . Call OldTapas if problem specific to this version"
        args:
            - unused_ExpTxt:
                help: "Export in text format (Def=false) (INT)"
                long: ExpTxt
                takes_value: true
            - unused_Out:
                help: "Directory of Output Orientation (string)"
                long: Out
                takes_value: true
            - unused_InCal:
                help: "Directory of Input Internal Orientation (Calibration) (string)"
                long: InCal
                takes_value: true
            - unused_InOri:
                help: "Directory of Input External Orientation (string)"
                long: InOri
                takes_value: true
            - unused_DoC:
                help: "Do Compensation (INT)"
                long: DoC
                takes_value: true
            - unused_ForCalib:
                help: "Is for calibration (Change def value of LMV and prop diag)? (INT)"
                long: ForCalib
                takes_value: true
            - unused_Focs:
                help: "Keep images with focal length inside range [A,B] (A,B in mm) (Def=keep all) (Pt2dr)"
                long: Focs
                takes_value: true
            - unused_VitesseInit:
                help: "  * [Name=VitesseInit] IN (INT)"
                long: VitesseInit
                takes_value: true
            - unused_PPRel:
                help: "Principal point shift (Pt2dr)"
                long: PPRel
                takes_value: true
            - unused_Decentre:
                help: "Principal point is shifted (Def=false) (INT)"
                long: Decentre
                takes_value: true
            - unused_PropDiag:
                help: "Hemi-spherik fisheye diameter to diagonal ratio (REAL)"
                long: PropDiag
                takes_value: true
            - unused_SauvAutom:
                help: "Save intermediary results to, Set NONE if dont want any (string)"
                long: SauvAutom
                takes_value: true
            - unused_ImInit:
                help: "Force first image (string)"
                long: ImInit
                takes_value: true
            - unused_MOI:
                help: "MOI (bool)"
                long: MOI
                takes_value: true
            - unused_DBF:
                help: "Debug (internal use : DebugPbCondFaisceau=true)  (INT)"
                long: DBF
                takes_value: true
            - unused_Debug:
                help: "Partial file for debug (bool)"
                long: Debug
                takes_value: true
            - unused_DegRadMax:
                help: "Max degree of radial, default model dependent (INT)"
                long: DegRadMax
                takes_value: true
            - unused_DegGen:
                help: "Max degree of general polynome, default model dependent (generally 0 or 1) (INT)"
                long: DegGen
                takes_value: true
            - unused_LibAff:
                help: "Free affine parameter, Def=true (bool)"
                long: LibAff
                takes_value: true
            - unused_LibDec:
                help: "Free decentric parameter, Def=true (bool)"
                long: LibDec
                takes_value: true
            - unused_LibPP:
                help: "Free principal point, Def=true (bool)"
                long: LibPP
                takes_value: true
            - unused_LibCP:
                help: "Free distorsion center, Def=true (bool)"
                long: LibCP
                takes_value: true
            - unused_LibFoc:
                help: "Free focal, Def=true (bool)"
                long: LibFoc
                takes_value: true
            - unused_RapTxt:
                help: "RapTxt (string)"
                long: RapTxt
                takes_value: true
            - unused_LinkPPaPPs:
                help: "Link PPa and PPs (double) (REAL)"
                long: LinkPPaPPs
                takes_value: true
            - unused_FrozenPoses:
                help: "List of frozen poses (pattern) (string)"
                long: FrozenPoses
                takes_value: true
            - unused_FreeCalibInit:
                help: "Free calibs as soon as created (Def=false) (bool)"
                long: FreeCalibInit
                takes_value: true
            - unused_FrozenCalibs:
                help: "List of frozen calibration (pattern) (string)"
                long: FrozenCalibs
                takes_value: true
            - unused_FreeCalibs:
                help: "List of free calibration (pattern, Def=|.*|) (string)"
                long: FreeCalibs
                takes_value: true
            - unused_SH:
                help: "Set of Hom, Def=||, give MasqFiltered for result of HomolFilterMasq (string)"
                long: SH
                takes_value: true
            - unused_RefineAll:
                help: "More refinement at all step, safer and more accurate, but slower, def=true (bool)"
                long: RefineAll
                takes_value: true
            - unused_ImMinMax:
                help: "Image min and max (may avoid tricky pattern ...) (vector<std::string>)"
                long: ImMinMax
                takes_value: true
            - unused_EcMax:
                help: "Final threshold for residual, def = 5.0  (REAL)"
                long: EcMax
                takes_value: true
            - unused_EcInit:
                help: "Inital threshold for residual def = [100,5.0]  (Pt2dr)"
                long: EcInit
                takes_value: true
            - unused_CondMaxPano:
                help: "Precaution for conditionning with Panoramic images, Def=1e4 (old was 0)  (REAL)"
                long: CondMaxPano
                takes_value: true
            - unused_SinglePos:
                help: "Pattern of single Pos Calib to save [Pose,Calib] (vector<std::string>)"
                long: SinglePos
                takes_value: true
            - unused_RankInitF:
                help: "Order of focal initialisation, ref id distotion =2, Def=3  (INT)"
                long: RankInitF
                takes_value: true
            - unused_RankInitPP:
                help: "Order of Principal point initialisation, ref id distotion =2, Def=4 (INT)"
                long: RankInitPP
                takes_value: true
            - unused_RegulDist:
                help: "Parameter fo RegulDist [Val,Grad,Hessian,NbCase,SeuilNb] (vector<double>)"
                long: RegulDist
                takes_value: true
            - unused_MulLVM:
                help: "Multipier Levenberg Markard (REAL)"
                long: MulLVM
                takes_value: true
    - Tapioca:
        about: "Interface to Pastis for tie point detection and matching"
    - Tarama:
        about: "Compute a rectified image"
        args:
            - unused_Zoom:
                help: "Resolution, (Def=8, must be pow of 2) (INT)"
                long: Zoom
                takes_value: true
            - unused_Repere:
                help: "Local coordinate system as created with RepLocBascule (string)"
                long: Repere
                takes_value: true
            - unused_Out:
                help: "Directory for output (Deg=TA) (string)"
                long: Out
                takes_value: true
            - unused_ZMoy:
                help: "Average value of Z (REAL)"
                long: ZMoy
                takes_value: true
            - unused_KNadir:
                help: "KBest image or Nadir (when exist) (INT)"
                long: KNadir
                takes_value: true
            - unused_IncMax:
                help: "Maximum incidence of image (REAL)"
                long: IncMax
                takes_value: true
            - unused_UnUseAXC:
                help: "Internal use for unanamorphosed ortho (bool)"
                long: UnUseAXC
                takes_value: true
    - Tawny:
        about: "Interface to Porto to generate ortho-image"
        args:
            - unused_RadiomEgal:
                help: "Perform or not radiometric egalization (Def=true) (bool)"
                long: RadiomEgal
                takes_value: true
            - unused_DEq:
                help: "Degree of equalization (Def=1) (INT)"
                long: DEq
                takes_value: true
            - unused_DEqXY:
                help: "Degree of equalization, if diff in X and Y (Pt2di)"
                long: DEqXY
                takes_value: true
            - unused_AddCste:
                help: "Add unknown constant for equalization (Def=false) (bool)"
                long: AddCste
                takes_value: true
            - unused_DegRap:
                help: "Degree of rappel to initial values, Def = 0 (INT)"
                long: DegRap
                takes_value: true
            - unused_DegRapXY:
                help: "Degree of rappel to initial values, Def = 0 (Pt2di)"
                long: DegRapXY
                takes_value: true
            - unused_RGP:
                help: "Rappel glob on physically equalized, Def = true (bool)"
                long: RGP
                takes_value: true
            - unused_DynG:
                help: "Global Dynamic (to correct saturation problems) (REAL)"
                long: DynG
                takes_value: true
            - unused_ImPrio:
                help: "Pattern of image with high prio, def=.* (string)"
                long: ImPrio
                takes_value: true
            - unused_SzV:
                help: "Sz of Window for equalization (Def=1, means 3x3) (INT)"
                long: SzV
                takes_value: true
            - unused_CorThr:
                help: "Threshold of correlation to validate homologous (Def 0.7) (REAL)"
                long: CorThr
                takes_value: true
            - unused_NbPerIm:
                help: "Average number of point per image (Def = 1e4) (REAL)"
                long: NbPerIm
                takes_value: true
            - unused_L1F:
                help: "Do L1 Filter on couple, def=true (change when process is blocked) (bool)"
                long: L1F
                takes_value: true
            - unused_SatThresh:
                help: "Threshold determining saturation value (pixel >SatThresh will be ignored) (REAL)"
                long: SatThresh
                takes_value: true
            - unused_Out:
                help: "Name of output file (in the folder) (string)"
                long: Out
                takes_value: true
    - Tequila:
        about: "Texture mesh"
        args:
            - unused_Out:
                help: "Textured mesh name (def=plyName+ _textured.ply) (string)"
                long: Out
                takes_value: true
            - unused_Bin:
                help: "Write binary ply (def=true) (bool)"
                long: Bin
                takes_value: true
            - unused_Optim:
                help: "Graph-cut optimization (def=false) (bool)"
                long: Optim
                takes_value: true
            - unused_Lambda:
                help: "Lambda (def=0.01) (REAL)"
                long: Lambda
                takes_value: true
            - unused_Iter:
                help: "Optimization iteration number (def=2) (INT)"
                long: Iter
                takes_value: true
            - unused_Filter:
                help: "Remove border faces (def=false) (bool)"
                long: Filter
                takes_value: true
            - unused_Texture:
                help: "Texture name (def=plyName + _UVtexture.jpg) (string)"
                long: Texture
                takes_value: true
            - unused_Sz:
                help: "Texture max size (def=4096) (INT)"
                long: Sz
                takes_value: true
            - unused_Scale:
                help: "Z-buffer downscale factor (def=2) (INT)"
                long: Scale
                takes_value: true
            - unused_QUAL:
                help: "jpeg compression quality (def=70) (INT)"
                long: QUAL
                takes_value: true
            - unused_Angle:
                help: "Threshold angle, in degree, between triangle normal and image viewing direction (def=90) (REAL)"
                long: Angle
                takes_value: true
            - unused_Mode:
                help: "Mode (def = Pack) (string)"
                long: Mode
                takes_value: true
            - unused_Crit:
                help: "Texture choosing criterion (def = Angle) (string)"
                long: Crit
                takes_value: true
    - TestBundleInter:
        about: "Block Initialisation"
        args:
            - unused_Cam3:
                help: "[Cam3,x3,y3] (vector<std::string>)"
                long: Cam3
                takes_value: true
    - TestCam:
        about: "Test camera orientation convention"
        args:
            - unused_Tag:
                help: "Tag to get cam (string)"
                long: Tag
                takes_value: true
            - unused_Grid:
                help: "Test Grid Mode (bool)"
                long: Grid
                takes_value: true
            - unused_Out:
                help: "To Regenerate an orientation file (string)"
                long: Out
                takes_value: true
            - unused_ExtP:
                help: "Detail on external parameter (bool)"
                long: ExtP
                takes_value: true
            - unused_TOC:
                help: "Test corners (bool)"
                long: TOC
                takes_value: true
            - unused_TDINV:
                help: "Test Dist Inv (Pt2dr)"
                long: TDINV
                takes_value: true
    - TestChantier:
        about: "Test global acquisition"
    - TestCmds:
        about: "Test MM3D commands on micmac_data sets"
        args:
            - unused_Data_set:
                help: "Data sets (INT)"
                long: Data_set
                takes_value: true
    - TestDistM2C:
        about: "Basic Test for problematic camera"
    - TestKey:
        about: "Test Keys for Sets and Assoc"
        args:
            - unused_Nb:
                help: "Nb Max printed (def=10) (INT)"
                long: Nb
                takes_value: true
            - unused_KeyAssoc:
                help: "Key for association (string)"
                long: KeyAssoc
                takes_value: true
    - TestLib:
        about: "To call the program illustrating the library"
    - TestMTD:
        about: "Test meta data of image"
    - TestNameCalib:
        about: "Test Name of calibration"
        args:
            - unused_Nb:
                help: "Name of caib (def=TestNameCalib) (string)"
                long: Nb
                takes_value: true
    - TestPbRPC:
        about: "Test possible Problems on RPC"
        args:
            - unused_NbZ:
                help: "Number of Z Layer (INT)"
                long: NbZ
                takes_value: true
            - unused_NbXY:
                help: "Number of XY layers (INT)"
                long: NbXY
                takes_value: true
            - unused_SeuilRP:
                help: "Thresols for dist reproj (REAL)"
                long: SeuilRP
                takes_value: true
            - unused_SeuilGrad:
                help: "Thresols for grad (REAL)"
                long: SeuilGrad
                takes_value: true
            - unused_PrErr:
                help: "Print high residual (bool)"
                long: PrErr
                takes_value: true
            - unused_PlyErr:
                help: "Make ply of high residual (bool)"
                long: PlyErr
                takes_value: true
            - unused_PlySXTer:
                help: "Make ply of sign XTer (bool)"
                long: PlySXTer
                takes_value: true
            - unused_PlySYTer:
                help: "Make ply of sign YTer (bool)"
                long: PlySYTer
                takes_value: true
            - unused_PlySXIm:
                help: "Make ply of sign XIm (bool)"
                long: PlySXIm
                takes_value: true
            - unused_PlySYIm:
                help: "Make ply of sign YIm (bool)"
                long: PlySYIm
                takes_value: true
    - TestRegEx:
        about: "Test regular expression"
        args:
            - unused_DispPat:
                help: "Display Pattern to use in cmd line ; Def=false (bool)"
                long: DispPat
                takes_value: true
    - TiePAll:
        about: "matches points of interest of two images"
        args:
            - unused_ExpTxt:
                help: "Export files in text format (Def=false means binary) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ByP:
                help: "By process (INT)"
                long: ByP
                takes_value: true
            - unused_PostFix:
                help: "Add postfix in directory (string)"
                long: PostFix
                takes_value: true
            - unused_Detect:
                help: "  * [Name=Detect] strin (string)"
                long: Detect
                takes_value: true
            - unused_Circ:
                help: "Circular in mode Line (bool)"
                long: Circ
                takes_value: true
    - TiePByMesh:
        about: "Raffiner pts homologue par mesh"
        args:
            - unused_disp:
                help: "display (bool)"
                long: disp
                takes_value: true
            - unused_corl_glob:
                help: "corellation threshold for imagette global, default = 0.8 (REAL)"
                long: corl_glob
                takes_value: true
            - unused_corl_pt:
                help: "corellation threshold for pt interest, default = 0.9 (REAL)"
                long: corl_pt
                takes_value: true
            - unused_method:
                help: "Coor, SubCoor, default=SubCoor (string)"
                long: method
                takes_value: true
            - unused_SzPtCorr:
                help: "1->3*3,2->5*5 size of cor wind for each pt interet  default=1 (3*3) (INT)"
                long: SzPtCorr
                takes_value: true
            - unused_SzAreaCorr:
                help: "1->3*3,2->5*5 size of zone autour pt interet for search default=5 (11*11) (INT)"
                long: SzAreaCorr
                takes_value: true
            - unused_indTri:
                help: "process one triangle (INT)"
                long: indTri
                takes_value: true
            - unused_assum1er:
                help: "always use 1er pose as img master, default=0 (bool)"
                long: assum1er
                takes_value: true
            - unused_Test:
                help: "Test new method - fix size imagette of triangle (bool)"
                long: Test
                takes_value: true
            - unused_aTypeD:
                help: "FAST, DIGEO, HOMOLINIT - default = HOMOLINIT (string)"
                long: aTypeD
                takes_value: true
            - unused_dParam:
                help: "[param1, param2, ..] (selon detector - NO if don't have) (vector<std::string>)"
                long: dParam
                takes_value: true
            - unused_HomolOut:
                help: "default = _Filtered (string)"
                long: HomolOut
                takes_value: true
            - unused_useExist:
                help: "use exist homol struct - default = false (bool)"
                long: useExist
                takes_value: true
            - unused_angleV:
                help: "limit view angle - default = 90 (all triangle is viewable) (REAL)"
                long: angleV
                takes_value: true
            - unused_justFil:
                help: "just do filter. (bool)"
                long: justFil
                takes_value: true
    - TiePLine:
        about: "matches points of interest of two images"
        args:
            - unused_ExpTxt:
                help: "Export files in text format (Def=false means binary) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ByP:
                help: "By process (INT)"
                long: ByP
                takes_value: true
            - unused_PostFix:
                help: "Add postfix in directory (string)"
                long: PostFix
                takes_value: true
            - unused_Detect:
                help: "  * [Name=Detect] strin (string)"
                long: Detect
                takes_value: true
            - unused_Circ:
                help: "Circular in mode Line (bool)"
                long: Circ
                takes_value: true
    - TiePMS:
        about: "matches points of interest of two images"
        args:
            - unused_ExpTxt:
                help: "Export files in text format (Def=false means binary) (bool)"
                long: ExpTxt
                takes_value: true
            - unused_ByP:
                help: "By process (INT)"
                long: ByP
                takes_value: true
            - unused_PostFix:
                help: "Add postfix in directory (string)"
                long: PostFix
                takes_value: true
            - unused_Detect:
                help: "  * [Name=Detect] strin (string)"
                long: Detect
                takes_value: true
            - unused_Circ:
                help: "Circular in mode Line (bool)"
                long: Circ
                takes_value: true
    - TifDev:
        about: "Develop raw-jpg-tif, in suitable tiff file"
        args:
            - unused_NbChan:
                help: "Nb Channel (INT)"
                long: NbChan
                takes_value: true
            - unused_16B:
                help: "Keep in 16 Bits if possible (bool)"
                long: 16B
                takes_value: true
            - unused_ENC:
                help: "Exig No Compr (bool)"
                long: ENC
                takes_value: true
    - tiff_info:
        about: "Tool for giving information about a tiff file"
        args:
            - unused_MaxMin:
                help: "  * [Name=MaxMin] IN (INT)"
                long: MaxMin
                takes_value: true
    - TiPunch:
        about: "Compute mesh"
        args:
            - unused_Pattern:
                help: "Full Name (Dir+Pat) (string)"
                long: Pattern
                takes_value: true
            - unused_Out:
                help: "Mesh name (def=plyName+ _mesh.ply) (string)"
                long: Out
                takes_value: true
            - unused_Bin:
                help: "Write binary ply (def=true) (bool)"
                long: Bin
                takes_value: true
            - unused_Depth:
                help: "Maximum reconstruction depth for PoissonRecon (def=8) (INT)"
                long: Depth
                takes_value: true
            - unused_Rm:
                help: "Remove intermediary Poisson mesh (def=false) (bool)"
                long: Rm
                takes_value: true
            - unused_Filter:
                help: "Filter mesh (def=true) (bool)"
                long: Filter
                takes_value: true
            - unused_Mode:
                help: "C3DC mode (def=Statue) (string)"
                long: Mode
                takes_value: true
            - unused_Scale:
                help: "Z-buffer downscale factor (def=2) (INT)"
                long: Scale
                takes_value: true
            - unused_FFB:
                help: "Filter from border (def=true) (bool)"
                long: FFB
                takes_value: true
    - to8Bits:
        about: "Tool for converting 16 or 32 bit image in a 8 bit image."
        args:
            - unused_EcMin:
                help: "  * [Name=EcMin] REA (REAL)"
                long: EcMin
                takes_value: true
            - unused_Out:
                help: "  * [Name=Out] strin (string)"
                long: Out
                takes_value: true
            - unused_Brd:
                help: "  * [Name=Brd] IN (INT)"
                long: Brd
                takes_value: true
            - unused_NbIter:
                help: "  * [Name=NbIter] IN (INT)"
                long: NbIter
                takes_value: true
            - unused_Dyn:
                help: "  * [Name=Dyn] REA (REAL)"
                long: Dyn
                takes_value: true
            - unused_Offset:
                help: "  * [Name=Offset] IN (INT)"
                long: Offset
                takes_value: true
            - unused_NewOffset:
                help: "  * [Name=NewOffset] IN (INT)"
                long: NewOffset
                takes_value: true
            - unused_Circ:
                help: "  * [Name=Circ] IN (INT)"
                long: Circ
                takes_value: true
            - unused_Coul:
                help: "  * [Name=Coul] IN (INT)"
                long: Coul
                takes_value: true
            - unused_AdaptMinMax:
                help: "  * [Name=AdaptMinMax] IN (INT)"
                long: AdaptMinMax
                takes_value: true
            - unused_AdaptMin:
                help: "  * [Name=AdaptMin] IN (INT)"
                long: AdaptMin
                takes_value: true
            - unused_IS1:
                help: "  * [Name=IS1] IN (INT)"
                long: IS1
                takes_value: true
            - unused_GS1:
                help: "  * [Name=GS1] REA (REAL)"
                long: GS1
                takes_value: true
            - unused_WS1:
                help: "  * [Name=WS1] IN (INT)"
                long: WS1
                takes_value: true
            - unused_Type:
                help: "Type (string)"
                long: Type
                takes_value: true
            - unused_Strip:
                help: "  * [Name=Strip] IN (INT)"
                long: Strip
                takes_value: true
            - unused_Compr:
                help: "  * [Name=Compr] strin (string)"
                long: Compr
                takes_value: true
            - unused_TestVals:
                help: "  * [Name=TestVals] IN (INT)"
                long: TestVals
                takes_value: true
            - unused_Step:
                help: "  * [Name=Step] REA (REAL)"
                long: Step
                takes_value: true
            - unused_VisuAff:
                help: "  * [Name=VisuAff] IN (INT)"
                long: VisuAff
                takes_value: true
            - unused_P0Crop:
                help: "!!!  crop in rel (between 0 & 1) (Pt2dr)"
                long: P0Crop
                takes_value: true
            - unused_P1Crop:
                help: "!!!  crop in rel (between 0 & 1) (Pt2dr)"
                long: P1Crop
                takes_value: true
            - unused_CropIsAbs:
                help: " Set to true if crop is not rel  (bool)"
                long: CropIsAbs
                takes_value: true
            - unused_CanTileFile:
                help: "  * [Name=CanTileFile] IN (INT)"
                long: CanTileFile
                takes_value: true
            - unused_EqHisto:
                help: "  * [Name=EqHisto] IN (INT)"
                long: EqHisto
                takes_value: true
            - unused_StepH:
                help: "  * [Name=StepH] REA (REAL)"
                long: StepH
                takes_value: true
            - unused_ForceMax:
                help: "  * [Name=ForceMax] REA (REAL)"
                long: ForceMax
                takes_value: true
            - unused_ForceMin:
                help: "  * [Name=ForceMin] REA (REAL)"
                long: ForceMin
                takes_value: true
            - unused_Mask:
                help: "  * [Name=Mask] strin (string)"
                long: Mask
                takes_value: true
            - unused_BoucheMask:
                help: "  * [Name=BoucheMask] strin (string)"
                long: BoucheMask
                takes_value: true
            - unused_UseSigne:
                help: "  * [Name=UseSigne] boo (bool)"
                long: UseSigne
                takes_value: true
            - unused_2XV:
                help: "  * [Name=2XV] boo (bool)"
                long: 2XV
                takes_value: true
    - TripleSec:
        about: "Test Non Regression"
        args:
            - unused_OutReportXML:
                help: "XML report file (Def=GlobTest.xml) (string)"
                long: OutReportXML
                takes_value: true
            - unused_OutErrorsXML:
                help: "XML errors file (Def=ErrorsReport.xml) (string)"
                long: OutErrorsXML
                takes_value: true
            - unused_InRefDir:
                help: "Input Reference Directory (Def=TNR-Ref-Name) (string)"
                long: InRefDir
                takes_value: true
            - unused_Purge:
                help: "Purge Exe directory (Def=false) (bool)"
                long: Purge
                takes_value: true
    - Undist:
        about: "Tool for removing images distortion"
        args:
            - unused_UseMkF:
                help: "Can use make file for parallelization, def=true (bool)"
                long: UseMkF
                takes_value: true
            - unused_XX@ABB_InternalCall:
                help: "Internal use (bool)"
                long: XX@ABB_InternalCall
                takes_value: true
    - vic:
        about: "Do some stuff"
        args:
            - unused_editor:
                help: "  * [Name=editor] strin (string)"
                long: editor
                takes_value: true
    - Vino:
        about: "Image Viewer"
        args:
            - unused_SzW:
                help: "size of window (Pt2di)"
                long: SzW
                takes_value: true
            - unused_Bilin:
                help: "Bilinear mode (bool)"
                long: Bilin
                takes_value: true
            - unused_SZG:
                help: "Speed Zoom Grab (REAL)"
                long: SZG
                takes_value: true
            - unused_SZM:
                help: "Speed Zoom Molette (REAL)"
                long: SZM
                takes_value: true
            - unused_WS:
                help: "Width Scroller (INT)"
                long: WS
                takes_value: true
            - unused_Dyn:
                help: "Max Min value for dynamic (Pt2dr)"
                long: Dyn
                takes_value: true
            - unused_Gray:
                help: "Force gray images (def=false) (bool)"
                long: Gray
                takes_value: true
            - unused_IsMnt:
                help: "Display altitude if true, def exist of Mnt Meta data (bool)"
                long: IsMnt
                takes_value: true
            - unused_FileMnt:
                help: "Default toto.tif -> toto.xml (string)"
                long: FileMnt
                takes_value: true
            - unused_ClipCh:
                help: "Param 4 Clip Chantier [PatClip,OriClip] (vector<std::string>)"
                long: ClipCh
                takes_value: true
    - VisuRedHom:
        about: "Create a visualisation of residual on tie points"
        args:
            - unused_SH:
                help: "Set Homologue (string)"
                long: SH
                takes_value: true
    - Vodka:
        about: "IN DEV : Compute the vignette correction parameters from tie points"
        args:
            - unused_Out:
                help: "Output folder (Defaut=Vignette) (string)"
                long: Out
                takes_value: true
            - unused_InTxt:
                help: "True if homologous points have been exported in txt (Defaut=false) (bool)"
                long: InTxt
                takes_value: true
            - unused_InCal:
                help: "Name of folder with vignette calibration tif file (if previously computed) (string)"
                long: InCal
                takes_value: true
            - unused_DoCor:
                help: "Use the computed parameters to correct images (Defaut=false) (bool)"
                long: DoCor
                takes_value: true
    - VV:
        about: "A very simplified tool for 3D model of visage out of video, just for fun"
        args:
            - unused_Rate:
                help: "Number of images / sec (Def=4) (REAL)"
                long: Rate
                takes_value: true
            - unused_SzS:
                help: "Size Sift, (Def=-1 max resol) (INT)"
                long: SzS
                takes_value: true
            - unused_LineS:
                help: "Line Sift (Def=8) (INT)"
                long: LineS
                takes_value: true
            - unused_Teta:
                help: "Angle done (Def=180) (REAL)"
                long: Teta
                takes_value: true
    - XifGps2Txt:
        about: "Export embedded EXIF GPS data 2 Txt"
        args:
            - unused_OutTxtFile:
                help: "Def file created : 'GpsCoordinatesFromExif.txt'  (string)"
                long: OutTxtFile
                takes_value: true
            - unused_Sys:
                help: "System to express output coordinates : WGS84_deg/WGS84_rad/GeoC ; Def=WGS84_deg (string)"
                long: Sys
                takes_value: true
            - unused_DefZ:
                help: "  * [Name=DefZ] REA (REAL)"
                long: DefZ
                takes_value: true
    - XifGps2Xml:
        about: "Create MicMac-Xml struct from GPS embedded in EXIF"
        args:
            - unused_DoRTL:
                help: "Do Local Tangent RTL (def=true) (bool)"
                long: DoRTL
                takes_value: true
            - unused_RTL:
                help: "Name RTL (string)"
                long: RTL
                takes_value: true
            - unused_SysCo:
                help: "System of coordinates, by default RTL created (RTLFromExif.xml) (string)"
                long: SysCo
                takes_value: true
            - unused_DefZ:
                help: "  * [Name=DefZ] REA (REAL)"
                long: DefZ
                takes_value: true
    - XLib:
        about: "Xeres Lib - early work in progress!"
    - XYZ2Im:
        about: "tool to transform a 3D point (text file) to their 2D proj in cam or cloud"
    - Zlimit:
        about: "Crop Depth image (or DEM) in Z"
        args:
            - unused_MasqSup:
                help: "Supplementary mask (string)"
                long: MasqSup
                takes_value: true
            - unused_CorrelIm:
                help: "Use correl image as a mask (string)"
                long: CorrelIm
                takes_value: true
            - unused_CorrelThr:
                help: "Correl Threshold for acceptance (def=0.02) (REAL)"
                long: CorrelThr
                takes_value: true
            - unused_OriginIm:
                help: "Original image (used only with OriginImMinVal) (string)"
                long: OriginIm
                takes_value: true
            - unused_OriginImMinVal:
                help: "Minimal value for origin image (used only with OriginIm) (INT)"
                long: OriginImMinVal
                takes_value: true
            - unused_DEM:
                help: "Output masked DEM (def=true) (bool)"
                long: DEM
                takes_value: true
